#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7402070304101322236) {
   out_7402070304101322236[0] = 0;
   out_7402070304101322236[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7402070304101322236[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7402070304101322236[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7402070304101322236[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7402070304101322236[5] = -sin(in_vec[1]);
   out_7402070304101322236[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7402070304101322236[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7402070304101322236[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7402070304101322236[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7402070304101322236[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7402070304101322236[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7402070304101322236[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7402070304101322236[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7402070304101322236[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7402070304101322236[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7402070304101322236[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7402070304101322236[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_460665167769025615) {
   out_460665167769025615[0] = delta_x[0] + nom_x[0];
   out_460665167769025615[1] = delta_x[1] + nom_x[1];
   out_460665167769025615[2] = delta_x[2] + nom_x[2];
   out_460665167769025615[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_460665167769025615[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_460665167769025615[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_460665167769025615[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_460665167769025615[7] = delta_x[6] + nom_x[7];
   out_460665167769025615[8] = delta_x[7] + nom_x[8];
   out_460665167769025615[9] = delta_x[8] + nom_x[9];
   out_460665167769025615[10] = delta_x[9] + nom_x[10];
   out_460665167769025615[11] = delta_x[10] + nom_x[11];
   out_460665167769025615[12] = delta_x[11] + nom_x[12];
   out_460665167769025615[13] = delta_x[12] + nom_x[13];
   out_460665167769025615[14] = delta_x[13] + nom_x[14];
   out_460665167769025615[15] = delta_x[14] + nom_x[15];
   out_460665167769025615[16] = delta_x[15] + nom_x[16];
   out_460665167769025615[17] = delta_x[16] + nom_x[17];
   out_460665167769025615[18] = delta_x[17] + nom_x[18];
   out_460665167769025615[19] = delta_x[18] + nom_x[19];
   out_460665167769025615[20] = delta_x[19] + nom_x[20];
   out_460665167769025615[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6625240037991151673) {
   out_6625240037991151673[0] = -nom_x[0] + true_x[0];
   out_6625240037991151673[1] = -nom_x[1] + true_x[1];
   out_6625240037991151673[2] = -nom_x[2] + true_x[2];
   out_6625240037991151673[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6625240037991151673[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6625240037991151673[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6625240037991151673[6] = -nom_x[7] + true_x[7];
   out_6625240037991151673[7] = -nom_x[8] + true_x[8];
   out_6625240037991151673[8] = -nom_x[9] + true_x[9];
   out_6625240037991151673[9] = -nom_x[10] + true_x[10];
   out_6625240037991151673[10] = -nom_x[11] + true_x[11];
   out_6625240037991151673[11] = -nom_x[12] + true_x[12];
   out_6625240037991151673[12] = -nom_x[13] + true_x[13];
   out_6625240037991151673[13] = -nom_x[14] + true_x[14];
   out_6625240037991151673[14] = -nom_x[15] + true_x[15];
   out_6625240037991151673[15] = -nom_x[16] + true_x[16];
   out_6625240037991151673[16] = -nom_x[17] + true_x[17];
   out_6625240037991151673[17] = -nom_x[18] + true_x[18];
   out_6625240037991151673[18] = -nom_x[19] + true_x[19];
   out_6625240037991151673[19] = -nom_x[20] + true_x[20];
   out_6625240037991151673[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6172559208002130840) {
   out_6172559208002130840[0] = 1.0;
   out_6172559208002130840[1] = 0;
   out_6172559208002130840[2] = 0;
   out_6172559208002130840[3] = 0;
   out_6172559208002130840[4] = 0;
   out_6172559208002130840[5] = 0;
   out_6172559208002130840[6] = 0;
   out_6172559208002130840[7] = 0;
   out_6172559208002130840[8] = 0;
   out_6172559208002130840[9] = 0;
   out_6172559208002130840[10] = 0;
   out_6172559208002130840[11] = 0;
   out_6172559208002130840[12] = 0;
   out_6172559208002130840[13] = 0;
   out_6172559208002130840[14] = 0;
   out_6172559208002130840[15] = 0;
   out_6172559208002130840[16] = 0;
   out_6172559208002130840[17] = 0;
   out_6172559208002130840[18] = 0;
   out_6172559208002130840[19] = 0;
   out_6172559208002130840[20] = 0;
   out_6172559208002130840[21] = 0;
   out_6172559208002130840[22] = 1.0;
   out_6172559208002130840[23] = 0;
   out_6172559208002130840[24] = 0;
   out_6172559208002130840[25] = 0;
   out_6172559208002130840[26] = 0;
   out_6172559208002130840[27] = 0;
   out_6172559208002130840[28] = 0;
   out_6172559208002130840[29] = 0;
   out_6172559208002130840[30] = 0;
   out_6172559208002130840[31] = 0;
   out_6172559208002130840[32] = 0;
   out_6172559208002130840[33] = 0;
   out_6172559208002130840[34] = 0;
   out_6172559208002130840[35] = 0;
   out_6172559208002130840[36] = 0;
   out_6172559208002130840[37] = 0;
   out_6172559208002130840[38] = 0;
   out_6172559208002130840[39] = 0;
   out_6172559208002130840[40] = 0;
   out_6172559208002130840[41] = 0;
   out_6172559208002130840[42] = 0;
   out_6172559208002130840[43] = 0;
   out_6172559208002130840[44] = 1.0;
   out_6172559208002130840[45] = 0;
   out_6172559208002130840[46] = 0;
   out_6172559208002130840[47] = 0;
   out_6172559208002130840[48] = 0;
   out_6172559208002130840[49] = 0;
   out_6172559208002130840[50] = 0;
   out_6172559208002130840[51] = 0;
   out_6172559208002130840[52] = 0;
   out_6172559208002130840[53] = 0;
   out_6172559208002130840[54] = 0;
   out_6172559208002130840[55] = 0;
   out_6172559208002130840[56] = 0;
   out_6172559208002130840[57] = 0;
   out_6172559208002130840[58] = 0;
   out_6172559208002130840[59] = 0;
   out_6172559208002130840[60] = 0;
   out_6172559208002130840[61] = 0;
   out_6172559208002130840[62] = 0;
   out_6172559208002130840[63] = 0;
   out_6172559208002130840[64] = 0;
   out_6172559208002130840[65] = 0;
   out_6172559208002130840[66] = -0.5*state[4];
   out_6172559208002130840[67] = -0.5*state[5];
   out_6172559208002130840[68] = -0.5*state[6];
   out_6172559208002130840[69] = 0;
   out_6172559208002130840[70] = 0;
   out_6172559208002130840[71] = 0;
   out_6172559208002130840[72] = 0;
   out_6172559208002130840[73] = 0;
   out_6172559208002130840[74] = 0;
   out_6172559208002130840[75] = 0;
   out_6172559208002130840[76] = 0;
   out_6172559208002130840[77] = 0;
   out_6172559208002130840[78] = 0;
   out_6172559208002130840[79] = 0;
   out_6172559208002130840[80] = 0;
   out_6172559208002130840[81] = 0;
   out_6172559208002130840[82] = 0;
   out_6172559208002130840[83] = 0;
   out_6172559208002130840[84] = 0;
   out_6172559208002130840[85] = 0;
   out_6172559208002130840[86] = 0;
   out_6172559208002130840[87] = 0.5*state[3];
   out_6172559208002130840[88] = 0.5*state[6];
   out_6172559208002130840[89] = -0.5*state[5];
   out_6172559208002130840[90] = 0;
   out_6172559208002130840[91] = 0;
   out_6172559208002130840[92] = 0;
   out_6172559208002130840[93] = 0;
   out_6172559208002130840[94] = 0;
   out_6172559208002130840[95] = 0;
   out_6172559208002130840[96] = 0;
   out_6172559208002130840[97] = 0;
   out_6172559208002130840[98] = 0;
   out_6172559208002130840[99] = 0;
   out_6172559208002130840[100] = 0;
   out_6172559208002130840[101] = 0;
   out_6172559208002130840[102] = 0;
   out_6172559208002130840[103] = 0;
   out_6172559208002130840[104] = 0;
   out_6172559208002130840[105] = 0;
   out_6172559208002130840[106] = 0;
   out_6172559208002130840[107] = 0;
   out_6172559208002130840[108] = -0.5*state[6];
   out_6172559208002130840[109] = 0.5*state[3];
   out_6172559208002130840[110] = 0.5*state[4];
   out_6172559208002130840[111] = 0;
   out_6172559208002130840[112] = 0;
   out_6172559208002130840[113] = 0;
   out_6172559208002130840[114] = 0;
   out_6172559208002130840[115] = 0;
   out_6172559208002130840[116] = 0;
   out_6172559208002130840[117] = 0;
   out_6172559208002130840[118] = 0;
   out_6172559208002130840[119] = 0;
   out_6172559208002130840[120] = 0;
   out_6172559208002130840[121] = 0;
   out_6172559208002130840[122] = 0;
   out_6172559208002130840[123] = 0;
   out_6172559208002130840[124] = 0;
   out_6172559208002130840[125] = 0;
   out_6172559208002130840[126] = 0;
   out_6172559208002130840[127] = 0;
   out_6172559208002130840[128] = 0;
   out_6172559208002130840[129] = 0.5*state[5];
   out_6172559208002130840[130] = -0.5*state[4];
   out_6172559208002130840[131] = 0.5*state[3];
   out_6172559208002130840[132] = 0;
   out_6172559208002130840[133] = 0;
   out_6172559208002130840[134] = 0;
   out_6172559208002130840[135] = 0;
   out_6172559208002130840[136] = 0;
   out_6172559208002130840[137] = 0;
   out_6172559208002130840[138] = 0;
   out_6172559208002130840[139] = 0;
   out_6172559208002130840[140] = 0;
   out_6172559208002130840[141] = 0;
   out_6172559208002130840[142] = 0;
   out_6172559208002130840[143] = 0;
   out_6172559208002130840[144] = 0;
   out_6172559208002130840[145] = 0;
   out_6172559208002130840[146] = 0;
   out_6172559208002130840[147] = 0;
   out_6172559208002130840[148] = 0;
   out_6172559208002130840[149] = 0;
   out_6172559208002130840[150] = 0;
   out_6172559208002130840[151] = 0;
   out_6172559208002130840[152] = 0;
   out_6172559208002130840[153] = 1.0;
   out_6172559208002130840[154] = 0;
   out_6172559208002130840[155] = 0;
   out_6172559208002130840[156] = 0;
   out_6172559208002130840[157] = 0;
   out_6172559208002130840[158] = 0;
   out_6172559208002130840[159] = 0;
   out_6172559208002130840[160] = 0;
   out_6172559208002130840[161] = 0;
   out_6172559208002130840[162] = 0;
   out_6172559208002130840[163] = 0;
   out_6172559208002130840[164] = 0;
   out_6172559208002130840[165] = 0;
   out_6172559208002130840[166] = 0;
   out_6172559208002130840[167] = 0;
   out_6172559208002130840[168] = 0;
   out_6172559208002130840[169] = 0;
   out_6172559208002130840[170] = 0;
   out_6172559208002130840[171] = 0;
   out_6172559208002130840[172] = 0;
   out_6172559208002130840[173] = 0;
   out_6172559208002130840[174] = 0;
   out_6172559208002130840[175] = 1.0;
   out_6172559208002130840[176] = 0;
   out_6172559208002130840[177] = 0;
   out_6172559208002130840[178] = 0;
   out_6172559208002130840[179] = 0;
   out_6172559208002130840[180] = 0;
   out_6172559208002130840[181] = 0;
   out_6172559208002130840[182] = 0;
   out_6172559208002130840[183] = 0;
   out_6172559208002130840[184] = 0;
   out_6172559208002130840[185] = 0;
   out_6172559208002130840[186] = 0;
   out_6172559208002130840[187] = 0;
   out_6172559208002130840[188] = 0;
   out_6172559208002130840[189] = 0;
   out_6172559208002130840[190] = 0;
   out_6172559208002130840[191] = 0;
   out_6172559208002130840[192] = 0;
   out_6172559208002130840[193] = 0;
   out_6172559208002130840[194] = 0;
   out_6172559208002130840[195] = 0;
   out_6172559208002130840[196] = 0;
   out_6172559208002130840[197] = 1.0;
   out_6172559208002130840[198] = 0;
   out_6172559208002130840[199] = 0;
   out_6172559208002130840[200] = 0;
   out_6172559208002130840[201] = 0;
   out_6172559208002130840[202] = 0;
   out_6172559208002130840[203] = 0;
   out_6172559208002130840[204] = 0;
   out_6172559208002130840[205] = 0;
   out_6172559208002130840[206] = 0;
   out_6172559208002130840[207] = 0;
   out_6172559208002130840[208] = 0;
   out_6172559208002130840[209] = 0;
   out_6172559208002130840[210] = 0;
   out_6172559208002130840[211] = 0;
   out_6172559208002130840[212] = 0;
   out_6172559208002130840[213] = 0;
   out_6172559208002130840[214] = 0;
   out_6172559208002130840[215] = 0;
   out_6172559208002130840[216] = 0;
   out_6172559208002130840[217] = 0;
   out_6172559208002130840[218] = 0;
   out_6172559208002130840[219] = 1.0;
   out_6172559208002130840[220] = 0;
   out_6172559208002130840[221] = 0;
   out_6172559208002130840[222] = 0;
   out_6172559208002130840[223] = 0;
   out_6172559208002130840[224] = 0;
   out_6172559208002130840[225] = 0;
   out_6172559208002130840[226] = 0;
   out_6172559208002130840[227] = 0;
   out_6172559208002130840[228] = 0;
   out_6172559208002130840[229] = 0;
   out_6172559208002130840[230] = 0;
   out_6172559208002130840[231] = 0;
   out_6172559208002130840[232] = 0;
   out_6172559208002130840[233] = 0;
   out_6172559208002130840[234] = 0;
   out_6172559208002130840[235] = 0;
   out_6172559208002130840[236] = 0;
   out_6172559208002130840[237] = 0;
   out_6172559208002130840[238] = 0;
   out_6172559208002130840[239] = 0;
   out_6172559208002130840[240] = 0;
   out_6172559208002130840[241] = 1.0;
   out_6172559208002130840[242] = 0;
   out_6172559208002130840[243] = 0;
   out_6172559208002130840[244] = 0;
   out_6172559208002130840[245] = 0;
   out_6172559208002130840[246] = 0;
   out_6172559208002130840[247] = 0;
   out_6172559208002130840[248] = 0;
   out_6172559208002130840[249] = 0;
   out_6172559208002130840[250] = 0;
   out_6172559208002130840[251] = 0;
   out_6172559208002130840[252] = 0;
   out_6172559208002130840[253] = 0;
   out_6172559208002130840[254] = 0;
   out_6172559208002130840[255] = 0;
   out_6172559208002130840[256] = 0;
   out_6172559208002130840[257] = 0;
   out_6172559208002130840[258] = 0;
   out_6172559208002130840[259] = 0;
   out_6172559208002130840[260] = 0;
   out_6172559208002130840[261] = 0;
   out_6172559208002130840[262] = 0;
   out_6172559208002130840[263] = 1.0;
   out_6172559208002130840[264] = 0;
   out_6172559208002130840[265] = 0;
   out_6172559208002130840[266] = 0;
   out_6172559208002130840[267] = 0;
   out_6172559208002130840[268] = 0;
   out_6172559208002130840[269] = 0;
   out_6172559208002130840[270] = 0;
   out_6172559208002130840[271] = 0;
   out_6172559208002130840[272] = 0;
   out_6172559208002130840[273] = 0;
   out_6172559208002130840[274] = 0;
   out_6172559208002130840[275] = 0;
   out_6172559208002130840[276] = 0;
   out_6172559208002130840[277] = 0;
   out_6172559208002130840[278] = 0;
   out_6172559208002130840[279] = 0;
   out_6172559208002130840[280] = 0;
   out_6172559208002130840[281] = 0;
   out_6172559208002130840[282] = 0;
   out_6172559208002130840[283] = 0;
   out_6172559208002130840[284] = 0;
   out_6172559208002130840[285] = 1.0;
   out_6172559208002130840[286] = 0;
   out_6172559208002130840[287] = 0;
   out_6172559208002130840[288] = 0;
   out_6172559208002130840[289] = 0;
   out_6172559208002130840[290] = 0;
   out_6172559208002130840[291] = 0;
   out_6172559208002130840[292] = 0;
   out_6172559208002130840[293] = 0;
   out_6172559208002130840[294] = 0;
   out_6172559208002130840[295] = 0;
   out_6172559208002130840[296] = 0;
   out_6172559208002130840[297] = 0;
   out_6172559208002130840[298] = 0;
   out_6172559208002130840[299] = 0;
   out_6172559208002130840[300] = 0;
   out_6172559208002130840[301] = 0;
   out_6172559208002130840[302] = 0;
   out_6172559208002130840[303] = 0;
   out_6172559208002130840[304] = 0;
   out_6172559208002130840[305] = 0;
   out_6172559208002130840[306] = 0;
   out_6172559208002130840[307] = 1.0;
   out_6172559208002130840[308] = 0;
   out_6172559208002130840[309] = 0;
   out_6172559208002130840[310] = 0;
   out_6172559208002130840[311] = 0;
   out_6172559208002130840[312] = 0;
   out_6172559208002130840[313] = 0;
   out_6172559208002130840[314] = 0;
   out_6172559208002130840[315] = 0;
   out_6172559208002130840[316] = 0;
   out_6172559208002130840[317] = 0;
   out_6172559208002130840[318] = 0;
   out_6172559208002130840[319] = 0;
   out_6172559208002130840[320] = 0;
   out_6172559208002130840[321] = 0;
   out_6172559208002130840[322] = 0;
   out_6172559208002130840[323] = 0;
   out_6172559208002130840[324] = 0;
   out_6172559208002130840[325] = 0;
   out_6172559208002130840[326] = 0;
   out_6172559208002130840[327] = 0;
   out_6172559208002130840[328] = 0;
   out_6172559208002130840[329] = 1.0;
   out_6172559208002130840[330] = 0;
   out_6172559208002130840[331] = 0;
   out_6172559208002130840[332] = 0;
   out_6172559208002130840[333] = 0;
   out_6172559208002130840[334] = 0;
   out_6172559208002130840[335] = 0;
   out_6172559208002130840[336] = 0;
   out_6172559208002130840[337] = 0;
   out_6172559208002130840[338] = 0;
   out_6172559208002130840[339] = 0;
   out_6172559208002130840[340] = 0;
   out_6172559208002130840[341] = 0;
   out_6172559208002130840[342] = 0;
   out_6172559208002130840[343] = 0;
   out_6172559208002130840[344] = 0;
   out_6172559208002130840[345] = 0;
   out_6172559208002130840[346] = 0;
   out_6172559208002130840[347] = 0;
   out_6172559208002130840[348] = 0;
   out_6172559208002130840[349] = 0;
   out_6172559208002130840[350] = 0;
   out_6172559208002130840[351] = 1.0;
   out_6172559208002130840[352] = 0;
   out_6172559208002130840[353] = 0;
   out_6172559208002130840[354] = 0;
   out_6172559208002130840[355] = 0;
   out_6172559208002130840[356] = 0;
   out_6172559208002130840[357] = 0;
   out_6172559208002130840[358] = 0;
   out_6172559208002130840[359] = 0;
   out_6172559208002130840[360] = 0;
   out_6172559208002130840[361] = 0;
   out_6172559208002130840[362] = 0;
   out_6172559208002130840[363] = 0;
   out_6172559208002130840[364] = 0;
   out_6172559208002130840[365] = 0;
   out_6172559208002130840[366] = 0;
   out_6172559208002130840[367] = 0;
   out_6172559208002130840[368] = 0;
   out_6172559208002130840[369] = 0;
   out_6172559208002130840[370] = 0;
   out_6172559208002130840[371] = 0;
   out_6172559208002130840[372] = 0;
   out_6172559208002130840[373] = 1.0;
   out_6172559208002130840[374] = 0;
   out_6172559208002130840[375] = 0;
   out_6172559208002130840[376] = 0;
   out_6172559208002130840[377] = 0;
   out_6172559208002130840[378] = 0;
   out_6172559208002130840[379] = 0;
   out_6172559208002130840[380] = 0;
   out_6172559208002130840[381] = 0;
   out_6172559208002130840[382] = 0;
   out_6172559208002130840[383] = 0;
   out_6172559208002130840[384] = 0;
   out_6172559208002130840[385] = 0;
   out_6172559208002130840[386] = 0;
   out_6172559208002130840[387] = 0;
   out_6172559208002130840[388] = 0;
   out_6172559208002130840[389] = 0;
   out_6172559208002130840[390] = 0;
   out_6172559208002130840[391] = 0;
   out_6172559208002130840[392] = 0;
   out_6172559208002130840[393] = 0;
   out_6172559208002130840[394] = 0;
   out_6172559208002130840[395] = 1.0;
   out_6172559208002130840[396] = 0;
   out_6172559208002130840[397] = 0;
   out_6172559208002130840[398] = 0;
   out_6172559208002130840[399] = 0;
   out_6172559208002130840[400] = 0;
   out_6172559208002130840[401] = 0;
   out_6172559208002130840[402] = 0;
   out_6172559208002130840[403] = 0;
   out_6172559208002130840[404] = 0;
   out_6172559208002130840[405] = 0;
   out_6172559208002130840[406] = 0;
   out_6172559208002130840[407] = 0;
   out_6172559208002130840[408] = 0;
   out_6172559208002130840[409] = 0;
   out_6172559208002130840[410] = 0;
   out_6172559208002130840[411] = 0;
   out_6172559208002130840[412] = 0;
   out_6172559208002130840[413] = 0;
   out_6172559208002130840[414] = 0;
   out_6172559208002130840[415] = 0;
   out_6172559208002130840[416] = 0;
   out_6172559208002130840[417] = 1.0;
   out_6172559208002130840[418] = 0;
   out_6172559208002130840[419] = 0;
   out_6172559208002130840[420] = 0;
   out_6172559208002130840[421] = 0;
   out_6172559208002130840[422] = 0;
   out_6172559208002130840[423] = 0;
   out_6172559208002130840[424] = 0;
   out_6172559208002130840[425] = 0;
   out_6172559208002130840[426] = 0;
   out_6172559208002130840[427] = 0;
   out_6172559208002130840[428] = 0;
   out_6172559208002130840[429] = 0;
   out_6172559208002130840[430] = 0;
   out_6172559208002130840[431] = 0;
   out_6172559208002130840[432] = 0;
   out_6172559208002130840[433] = 0;
   out_6172559208002130840[434] = 0;
   out_6172559208002130840[435] = 0;
   out_6172559208002130840[436] = 0;
   out_6172559208002130840[437] = 0;
   out_6172559208002130840[438] = 0;
   out_6172559208002130840[439] = 1.0;
   out_6172559208002130840[440] = 0;
   out_6172559208002130840[441] = 0;
   out_6172559208002130840[442] = 0;
   out_6172559208002130840[443] = 0;
   out_6172559208002130840[444] = 0;
   out_6172559208002130840[445] = 0;
   out_6172559208002130840[446] = 0;
   out_6172559208002130840[447] = 0;
   out_6172559208002130840[448] = 0;
   out_6172559208002130840[449] = 0;
   out_6172559208002130840[450] = 0;
   out_6172559208002130840[451] = 0;
   out_6172559208002130840[452] = 0;
   out_6172559208002130840[453] = 0;
   out_6172559208002130840[454] = 0;
   out_6172559208002130840[455] = 0;
   out_6172559208002130840[456] = 0;
   out_6172559208002130840[457] = 0;
   out_6172559208002130840[458] = 0;
   out_6172559208002130840[459] = 0;
   out_6172559208002130840[460] = 0;
   out_6172559208002130840[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3016561442420806540) {
   out_3016561442420806540[0] = dt*state[7] + state[0];
   out_3016561442420806540[1] = dt*state[8] + state[1];
   out_3016561442420806540[2] = dt*state[9] + state[2];
   out_3016561442420806540[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3016561442420806540[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3016561442420806540[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3016561442420806540[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3016561442420806540[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3016561442420806540[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3016561442420806540[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3016561442420806540[10] = state[10];
   out_3016561442420806540[11] = state[11];
   out_3016561442420806540[12] = state[12];
   out_3016561442420806540[13] = state[13];
   out_3016561442420806540[14] = state[14];
   out_3016561442420806540[15] = state[15];
   out_3016561442420806540[16] = state[16];
   out_3016561442420806540[17] = state[17];
   out_3016561442420806540[18] = state[18];
   out_3016561442420806540[19] = state[19];
   out_3016561442420806540[20] = state[20];
   out_3016561442420806540[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6833536681640660446) {
   out_6833536681640660446[0] = 1;
   out_6833536681640660446[1] = 0;
   out_6833536681640660446[2] = 0;
   out_6833536681640660446[3] = 0;
   out_6833536681640660446[4] = 0;
   out_6833536681640660446[5] = 0;
   out_6833536681640660446[6] = dt;
   out_6833536681640660446[7] = 0;
   out_6833536681640660446[8] = 0;
   out_6833536681640660446[9] = 0;
   out_6833536681640660446[10] = 0;
   out_6833536681640660446[11] = 0;
   out_6833536681640660446[12] = 0;
   out_6833536681640660446[13] = 0;
   out_6833536681640660446[14] = 0;
   out_6833536681640660446[15] = 0;
   out_6833536681640660446[16] = 0;
   out_6833536681640660446[17] = 0;
   out_6833536681640660446[18] = 0;
   out_6833536681640660446[19] = 0;
   out_6833536681640660446[20] = 0;
   out_6833536681640660446[21] = 0;
   out_6833536681640660446[22] = 1;
   out_6833536681640660446[23] = 0;
   out_6833536681640660446[24] = 0;
   out_6833536681640660446[25] = 0;
   out_6833536681640660446[26] = 0;
   out_6833536681640660446[27] = 0;
   out_6833536681640660446[28] = dt;
   out_6833536681640660446[29] = 0;
   out_6833536681640660446[30] = 0;
   out_6833536681640660446[31] = 0;
   out_6833536681640660446[32] = 0;
   out_6833536681640660446[33] = 0;
   out_6833536681640660446[34] = 0;
   out_6833536681640660446[35] = 0;
   out_6833536681640660446[36] = 0;
   out_6833536681640660446[37] = 0;
   out_6833536681640660446[38] = 0;
   out_6833536681640660446[39] = 0;
   out_6833536681640660446[40] = 0;
   out_6833536681640660446[41] = 0;
   out_6833536681640660446[42] = 0;
   out_6833536681640660446[43] = 0;
   out_6833536681640660446[44] = 1;
   out_6833536681640660446[45] = 0;
   out_6833536681640660446[46] = 0;
   out_6833536681640660446[47] = 0;
   out_6833536681640660446[48] = 0;
   out_6833536681640660446[49] = 0;
   out_6833536681640660446[50] = dt;
   out_6833536681640660446[51] = 0;
   out_6833536681640660446[52] = 0;
   out_6833536681640660446[53] = 0;
   out_6833536681640660446[54] = 0;
   out_6833536681640660446[55] = 0;
   out_6833536681640660446[56] = 0;
   out_6833536681640660446[57] = 0;
   out_6833536681640660446[58] = 0;
   out_6833536681640660446[59] = 0;
   out_6833536681640660446[60] = 0;
   out_6833536681640660446[61] = 0;
   out_6833536681640660446[62] = 0;
   out_6833536681640660446[63] = 0;
   out_6833536681640660446[64] = 0;
   out_6833536681640660446[65] = 0;
   out_6833536681640660446[66] = 1;
   out_6833536681640660446[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6833536681640660446[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6833536681640660446[69] = 0;
   out_6833536681640660446[70] = 0;
   out_6833536681640660446[71] = 0;
   out_6833536681640660446[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6833536681640660446[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6833536681640660446[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6833536681640660446[75] = 0;
   out_6833536681640660446[76] = 0;
   out_6833536681640660446[77] = 0;
   out_6833536681640660446[78] = 0;
   out_6833536681640660446[79] = 0;
   out_6833536681640660446[80] = 0;
   out_6833536681640660446[81] = 0;
   out_6833536681640660446[82] = 0;
   out_6833536681640660446[83] = 0;
   out_6833536681640660446[84] = 0;
   out_6833536681640660446[85] = 0;
   out_6833536681640660446[86] = 0;
   out_6833536681640660446[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6833536681640660446[88] = 1;
   out_6833536681640660446[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6833536681640660446[90] = 0;
   out_6833536681640660446[91] = 0;
   out_6833536681640660446[92] = 0;
   out_6833536681640660446[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6833536681640660446[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6833536681640660446[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6833536681640660446[96] = 0;
   out_6833536681640660446[97] = 0;
   out_6833536681640660446[98] = 0;
   out_6833536681640660446[99] = 0;
   out_6833536681640660446[100] = 0;
   out_6833536681640660446[101] = 0;
   out_6833536681640660446[102] = 0;
   out_6833536681640660446[103] = 0;
   out_6833536681640660446[104] = 0;
   out_6833536681640660446[105] = 0;
   out_6833536681640660446[106] = 0;
   out_6833536681640660446[107] = 0;
   out_6833536681640660446[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6833536681640660446[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6833536681640660446[110] = 1;
   out_6833536681640660446[111] = 0;
   out_6833536681640660446[112] = 0;
   out_6833536681640660446[113] = 0;
   out_6833536681640660446[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6833536681640660446[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6833536681640660446[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6833536681640660446[117] = 0;
   out_6833536681640660446[118] = 0;
   out_6833536681640660446[119] = 0;
   out_6833536681640660446[120] = 0;
   out_6833536681640660446[121] = 0;
   out_6833536681640660446[122] = 0;
   out_6833536681640660446[123] = 0;
   out_6833536681640660446[124] = 0;
   out_6833536681640660446[125] = 0;
   out_6833536681640660446[126] = 0;
   out_6833536681640660446[127] = 0;
   out_6833536681640660446[128] = 0;
   out_6833536681640660446[129] = 0;
   out_6833536681640660446[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6833536681640660446[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6833536681640660446[132] = 1;
   out_6833536681640660446[133] = 0;
   out_6833536681640660446[134] = 0;
   out_6833536681640660446[135] = 0;
   out_6833536681640660446[136] = 0;
   out_6833536681640660446[137] = 0;
   out_6833536681640660446[138] = 0;
   out_6833536681640660446[139] = 0;
   out_6833536681640660446[140] = 0;
   out_6833536681640660446[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6833536681640660446[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6833536681640660446[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6833536681640660446[144] = 0;
   out_6833536681640660446[145] = 0;
   out_6833536681640660446[146] = 0;
   out_6833536681640660446[147] = 0;
   out_6833536681640660446[148] = 0;
   out_6833536681640660446[149] = 0;
   out_6833536681640660446[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6833536681640660446[151] = 0;
   out_6833536681640660446[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6833536681640660446[153] = 0;
   out_6833536681640660446[154] = 1;
   out_6833536681640660446[155] = 0;
   out_6833536681640660446[156] = 0;
   out_6833536681640660446[157] = 0;
   out_6833536681640660446[158] = 0;
   out_6833536681640660446[159] = 0;
   out_6833536681640660446[160] = 0;
   out_6833536681640660446[161] = 0;
   out_6833536681640660446[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6833536681640660446[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6833536681640660446[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6833536681640660446[165] = 0;
   out_6833536681640660446[166] = 0;
   out_6833536681640660446[167] = 0;
   out_6833536681640660446[168] = 0;
   out_6833536681640660446[169] = 0;
   out_6833536681640660446[170] = 0;
   out_6833536681640660446[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6833536681640660446[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6833536681640660446[173] = 0;
   out_6833536681640660446[174] = 0;
   out_6833536681640660446[175] = 0;
   out_6833536681640660446[176] = 1;
   out_6833536681640660446[177] = 0;
   out_6833536681640660446[178] = 0;
   out_6833536681640660446[179] = 0;
   out_6833536681640660446[180] = 0;
   out_6833536681640660446[181] = 0;
   out_6833536681640660446[182] = 0;
   out_6833536681640660446[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6833536681640660446[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6833536681640660446[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6833536681640660446[186] = 0;
   out_6833536681640660446[187] = 0;
   out_6833536681640660446[188] = 0;
   out_6833536681640660446[189] = 0;
   out_6833536681640660446[190] = 0;
   out_6833536681640660446[191] = 0;
   out_6833536681640660446[192] = 0;
   out_6833536681640660446[193] = 0;
   out_6833536681640660446[194] = 0;
   out_6833536681640660446[195] = 0;
   out_6833536681640660446[196] = 0;
   out_6833536681640660446[197] = 0;
   out_6833536681640660446[198] = 1;
   out_6833536681640660446[199] = 0;
   out_6833536681640660446[200] = 0;
   out_6833536681640660446[201] = 0;
   out_6833536681640660446[202] = 0;
   out_6833536681640660446[203] = 0;
   out_6833536681640660446[204] = 0;
   out_6833536681640660446[205] = 0;
   out_6833536681640660446[206] = 0;
   out_6833536681640660446[207] = 0;
   out_6833536681640660446[208] = 0;
   out_6833536681640660446[209] = 0;
   out_6833536681640660446[210] = 0;
   out_6833536681640660446[211] = 0;
   out_6833536681640660446[212] = 0;
   out_6833536681640660446[213] = 0;
   out_6833536681640660446[214] = 0;
   out_6833536681640660446[215] = 0;
   out_6833536681640660446[216] = 0;
   out_6833536681640660446[217] = 0;
   out_6833536681640660446[218] = 0;
   out_6833536681640660446[219] = 0;
   out_6833536681640660446[220] = 1;
   out_6833536681640660446[221] = 0;
   out_6833536681640660446[222] = 0;
   out_6833536681640660446[223] = 0;
   out_6833536681640660446[224] = 0;
   out_6833536681640660446[225] = 0;
   out_6833536681640660446[226] = 0;
   out_6833536681640660446[227] = 0;
   out_6833536681640660446[228] = 0;
   out_6833536681640660446[229] = 0;
   out_6833536681640660446[230] = 0;
   out_6833536681640660446[231] = 0;
   out_6833536681640660446[232] = 0;
   out_6833536681640660446[233] = 0;
   out_6833536681640660446[234] = 0;
   out_6833536681640660446[235] = 0;
   out_6833536681640660446[236] = 0;
   out_6833536681640660446[237] = 0;
   out_6833536681640660446[238] = 0;
   out_6833536681640660446[239] = 0;
   out_6833536681640660446[240] = 0;
   out_6833536681640660446[241] = 0;
   out_6833536681640660446[242] = 1;
   out_6833536681640660446[243] = 0;
   out_6833536681640660446[244] = 0;
   out_6833536681640660446[245] = 0;
   out_6833536681640660446[246] = 0;
   out_6833536681640660446[247] = 0;
   out_6833536681640660446[248] = 0;
   out_6833536681640660446[249] = 0;
   out_6833536681640660446[250] = 0;
   out_6833536681640660446[251] = 0;
   out_6833536681640660446[252] = 0;
   out_6833536681640660446[253] = 0;
   out_6833536681640660446[254] = 0;
   out_6833536681640660446[255] = 0;
   out_6833536681640660446[256] = 0;
   out_6833536681640660446[257] = 0;
   out_6833536681640660446[258] = 0;
   out_6833536681640660446[259] = 0;
   out_6833536681640660446[260] = 0;
   out_6833536681640660446[261] = 0;
   out_6833536681640660446[262] = 0;
   out_6833536681640660446[263] = 0;
   out_6833536681640660446[264] = 1;
   out_6833536681640660446[265] = 0;
   out_6833536681640660446[266] = 0;
   out_6833536681640660446[267] = 0;
   out_6833536681640660446[268] = 0;
   out_6833536681640660446[269] = 0;
   out_6833536681640660446[270] = 0;
   out_6833536681640660446[271] = 0;
   out_6833536681640660446[272] = 0;
   out_6833536681640660446[273] = 0;
   out_6833536681640660446[274] = 0;
   out_6833536681640660446[275] = 0;
   out_6833536681640660446[276] = 0;
   out_6833536681640660446[277] = 0;
   out_6833536681640660446[278] = 0;
   out_6833536681640660446[279] = 0;
   out_6833536681640660446[280] = 0;
   out_6833536681640660446[281] = 0;
   out_6833536681640660446[282] = 0;
   out_6833536681640660446[283] = 0;
   out_6833536681640660446[284] = 0;
   out_6833536681640660446[285] = 0;
   out_6833536681640660446[286] = 1;
   out_6833536681640660446[287] = 0;
   out_6833536681640660446[288] = 0;
   out_6833536681640660446[289] = 0;
   out_6833536681640660446[290] = 0;
   out_6833536681640660446[291] = 0;
   out_6833536681640660446[292] = 0;
   out_6833536681640660446[293] = 0;
   out_6833536681640660446[294] = 0;
   out_6833536681640660446[295] = 0;
   out_6833536681640660446[296] = 0;
   out_6833536681640660446[297] = 0;
   out_6833536681640660446[298] = 0;
   out_6833536681640660446[299] = 0;
   out_6833536681640660446[300] = 0;
   out_6833536681640660446[301] = 0;
   out_6833536681640660446[302] = 0;
   out_6833536681640660446[303] = 0;
   out_6833536681640660446[304] = 0;
   out_6833536681640660446[305] = 0;
   out_6833536681640660446[306] = 0;
   out_6833536681640660446[307] = 0;
   out_6833536681640660446[308] = 1;
   out_6833536681640660446[309] = 0;
   out_6833536681640660446[310] = 0;
   out_6833536681640660446[311] = 0;
   out_6833536681640660446[312] = 0;
   out_6833536681640660446[313] = 0;
   out_6833536681640660446[314] = 0;
   out_6833536681640660446[315] = 0;
   out_6833536681640660446[316] = 0;
   out_6833536681640660446[317] = 0;
   out_6833536681640660446[318] = 0;
   out_6833536681640660446[319] = 0;
   out_6833536681640660446[320] = 0;
   out_6833536681640660446[321] = 0;
   out_6833536681640660446[322] = 0;
   out_6833536681640660446[323] = 0;
   out_6833536681640660446[324] = 0;
   out_6833536681640660446[325] = 0;
   out_6833536681640660446[326] = 0;
   out_6833536681640660446[327] = 0;
   out_6833536681640660446[328] = 0;
   out_6833536681640660446[329] = 0;
   out_6833536681640660446[330] = 1;
   out_6833536681640660446[331] = 0;
   out_6833536681640660446[332] = 0;
   out_6833536681640660446[333] = 0;
   out_6833536681640660446[334] = 0;
   out_6833536681640660446[335] = 0;
   out_6833536681640660446[336] = 0;
   out_6833536681640660446[337] = 0;
   out_6833536681640660446[338] = 0;
   out_6833536681640660446[339] = 0;
   out_6833536681640660446[340] = 0;
   out_6833536681640660446[341] = 0;
   out_6833536681640660446[342] = 0;
   out_6833536681640660446[343] = 0;
   out_6833536681640660446[344] = 0;
   out_6833536681640660446[345] = 0;
   out_6833536681640660446[346] = 0;
   out_6833536681640660446[347] = 0;
   out_6833536681640660446[348] = 0;
   out_6833536681640660446[349] = 0;
   out_6833536681640660446[350] = 0;
   out_6833536681640660446[351] = 0;
   out_6833536681640660446[352] = 1;
   out_6833536681640660446[353] = 0;
   out_6833536681640660446[354] = 0;
   out_6833536681640660446[355] = 0;
   out_6833536681640660446[356] = 0;
   out_6833536681640660446[357] = 0;
   out_6833536681640660446[358] = 0;
   out_6833536681640660446[359] = 0;
   out_6833536681640660446[360] = 0;
   out_6833536681640660446[361] = 0;
   out_6833536681640660446[362] = 0;
   out_6833536681640660446[363] = 0;
   out_6833536681640660446[364] = 0;
   out_6833536681640660446[365] = 0;
   out_6833536681640660446[366] = 0;
   out_6833536681640660446[367] = 0;
   out_6833536681640660446[368] = 0;
   out_6833536681640660446[369] = 0;
   out_6833536681640660446[370] = 0;
   out_6833536681640660446[371] = 0;
   out_6833536681640660446[372] = 0;
   out_6833536681640660446[373] = 0;
   out_6833536681640660446[374] = 1;
   out_6833536681640660446[375] = 0;
   out_6833536681640660446[376] = 0;
   out_6833536681640660446[377] = 0;
   out_6833536681640660446[378] = 0;
   out_6833536681640660446[379] = 0;
   out_6833536681640660446[380] = 0;
   out_6833536681640660446[381] = 0;
   out_6833536681640660446[382] = 0;
   out_6833536681640660446[383] = 0;
   out_6833536681640660446[384] = 0;
   out_6833536681640660446[385] = 0;
   out_6833536681640660446[386] = 0;
   out_6833536681640660446[387] = 0;
   out_6833536681640660446[388] = 0;
   out_6833536681640660446[389] = 0;
   out_6833536681640660446[390] = 0;
   out_6833536681640660446[391] = 0;
   out_6833536681640660446[392] = 0;
   out_6833536681640660446[393] = 0;
   out_6833536681640660446[394] = 0;
   out_6833536681640660446[395] = 0;
   out_6833536681640660446[396] = 1;
   out_6833536681640660446[397] = 0;
   out_6833536681640660446[398] = 0;
   out_6833536681640660446[399] = 0;
   out_6833536681640660446[400] = 0;
   out_6833536681640660446[401] = 0;
   out_6833536681640660446[402] = 0;
   out_6833536681640660446[403] = 0;
   out_6833536681640660446[404] = 0;
   out_6833536681640660446[405] = 0;
   out_6833536681640660446[406] = 0;
   out_6833536681640660446[407] = 0;
   out_6833536681640660446[408] = 0;
   out_6833536681640660446[409] = 0;
   out_6833536681640660446[410] = 0;
   out_6833536681640660446[411] = 0;
   out_6833536681640660446[412] = 0;
   out_6833536681640660446[413] = 0;
   out_6833536681640660446[414] = 0;
   out_6833536681640660446[415] = 0;
   out_6833536681640660446[416] = 0;
   out_6833536681640660446[417] = 0;
   out_6833536681640660446[418] = 1;
   out_6833536681640660446[419] = 0;
   out_6833536681640660446[420] = 0;
   out_6833536681640660446[421] = 0;
   out_6833536681640660446[422] = 0;
   out_6833536681640660446[423] = 0;
   out_6833536681640660446[424] = 0;
   out_6833536681640660446[425] = 0;
   out_6833536681640660446[426] = 0;
   out_6833536681640660446[427] = 0;
   out_6833536681640660446[428] = 0;
   out_6833536681640660446[429] = 0;
   out_6833536681640660446[430] = 0;
   out_6833536681640660446[431] = 0;
   out_6833536681640660446[432] = 0;
   out_6833536681640660446[433] = 0;
   out_6833536681640660446[434] = 0;
   out_6833536681640660446[435] = 0;
   out_6833536681640660446[436] = 0;
   out_6833536681640660446[437] = 0;
   out_6833536681640660446[438] = 0;
   out_6833536681640660446[439] = 0;
   out_6833536681640660446[440] = 1;
}
void h_4(double *state, double *unused, double *out_1804053058314886230) {
   out_1804053058314886230[0] = state[10] + state[13];
   out_1804053058314886230[1] = state[11] + state[14];
   out_1804053058314886230[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1970134765174672164) {
   out_1970134765174672164[0] = 0;
   out_1970134765174672164[1] = 0;
   out_1970134765174672164[2] = 0;
   out_1970134765174672164[3] = 0;
   out_1970134765174672164[4] = 0;
   out_1970134765174672164[5] = 0;
   out_1970134765174672164[6] = 0;
   out_1970134765174672164[7] = 0;
   out_1970134765174672164[8] = 0;
   out_1970134765174672164[9] = 0;
   out_1970134765174672164[10] = 1;
   out_1970134765174672164[11] = 0;
   out_1970134765174672164[12] = 0;
   out_1970134765174672164[13] = 1;
   out_1970134765174672164[14] = 0;
   out_1970134765174672164[15] = 0;
   out_1970134765174672164[16] = 0;
   out_1970134765174672164[17] = 0;
   out_1970134765174672164[18] = 0;
   out_1970134765174672164[19] = 0;
   out_1970134765174672164[20] = 0;
   out_1970134765174672164[21] = 0;
   out_1970134765174672164[22] = 0;
   out_1970134765174672164[23] = 0;
   out_1970134765174672164[24] = 0;
   out_1970134765174672164[25] = 0;
   out_1970134765174672164[26] = 0;
   out_1970134765174672164[27] = 0;
   out_1970134765174672164[28] = 0;
   out_1970134765174672164[29] = 0;
   out_1970134765174672164[30] = 0;
   out_1970134765174672164[31] = 0;
   out_1970134765174672164[32] = 0;
   out_1970134765174672164[33] = 1;
   out_1970134765174672164[34] = 0;
   out_1970134765174672164[35] = 0;
   out_1970134765174672164[36] = 1;
   out_1970134765174672164[37] = 0;
   out_1970134765174672164[38] = 0;
   out_1970134765174672164[39] = 0;
   out_1970134765174672164[40] = 0;
   out_1970134765174672164[41] = 0;
   out_1970134765174672164[42] = 0;
   out_1970134765174672164[43] = 0;
   out_1970134765174672164[44] = 0;
   out_1970134765174672164[45] = 0;
   out_1970134765174672164[46] = 0;
   out_1970134765174672164[47] = 0;
   out_1970134765174672164[48] = 0;
   out_1970134765174672164[49] = 0;
   out_1970134765174672164[50] = 0;
   out_1970134765174672164[51] = 0;
   out_1970134765174672164[52] = 0;
   out_1970134765174672164[53] = 0;
   out_1970134765174672164[54] = 0;
   out_1970134765174672164[55] = 0;
   out_1970134765174672164[56] = 1;
   out_1970134765174672164[57] = 0;
   out_1970134765174672164[58] = 0;
   out_1970134765174672164[59] = 1;
   out_1970134765174672164[60] = 0;
   out_1970134765174672164[61] = 0;
   out_1970134765174672164[62] = 0;
   out_1970134765174672164[63] = 0;
   out_1970134765174672164[64] = 0;
   out_1970134765174672164[65] = 0;
}
void h_9(double *state, double *unused, double *out_1266080828111930518) {
   out_1266080828111930518[0] = state[10];
   out_1266080828111930518[1] = state[11];
   out_1266080828111930518[2] = state[12];
}
void H_9(double *state, double *unused, double *out_9189390373270431982) {
   out_9189390373270431982[0] = 0;
   out_9189390373270431982[1] = 0;
   out_9189390373270431982[2] = 0;
   out_9189390373270431982[3] = 0;
   out_9189390373270431982[4] = 0;
   out_9189390373270431982[5] = 0;
   out_9189390373270431982[6] = 0;
   out_9189390373270431982[7] = 0;
   out_9189390373270431982[8] = 0;
   out_9189390373270431982[9] = 0;
   out_9189390373270431982[10] = 1;
   out_9189390373270431982[11] = 0;
   out_9189390373270431982[12] = 0;
   out_9189390373270431982[13] = 0;
   out_9189390373270431982[14] = 0;
   out_9189390373270431982[15] = 0;
   out_9189390373270431982[16] = 0;
   out_9189390373270431982[17] = 0;
   out_9189390373270431982[18] = 0;
   out_9189390373270431982[19] = 0;
   out_9189390373270431982[20] = 0;
   out_9189390373270431982[21] = 0;
   out_9189390373270431982[22] = 0;
   out_9189390373270431982[23] = 0;
   out_9189390373270431982[24] = 0;
   out_9189390373270431982[25] = 0;
   out_9189390373270431982[26] = 0;
   out_9189390373270431982[27] = 0;
   out_9189390373270431982[28] = 0;
   out_9189390373270431982[29] = 0;
   out_9189390373270431982[30] = 0;
   out_9189390373270431982[31] = 0;
   out_9189390373270431982[32] = 0;
   out_9189390373270431982[33] = 1;
   out_9189390373270431982[34] = 0;
   out_9189390373270431982[35] = 0;
   out_9189390373270431982[36] = 0;
   out_9189390373270431982[37] = 0;
   out_9189390373270431982[38] = 0;
   out_9189390373270431982[39] = 0;
   out_9189390373270431982[40] = 0;
   out_9189390373270431982[41] = 0;
   out_9189390373270431982[42] = 0;
   out_9189390373270431982[43] = 0;
   out_9189390373270431982[44] = 0;
   out_9189390373270431982[45] = 0;
   out_9189390373270431982[46] = 0;
   out_9189390373270431982[47] = 0;
   out_9189390373270431982[48] = 0;
   out_9189390373270431982[49] = 0;
   out_9189390373270431982[50] = 0;
   out_9189390373270431982[51] = 0;
   out_9189390373270431982[52] = 0;
   out_9189390373270431982[53] = 0;
   out_9189390373270431982[54] = 0;
   out_9189390373270431982[55] = 0;
   out_9189390373270431982[56] = 1;
   out_9189390373270431982[57] = 0;
   out_9189390373270431982[58] = 0;
   out_9189390373270431982[59] = 0;
   out_9189390373270431982[60] = 0;
   out_9189390373270431982[61] = 0;
   out_9189390373270431982[62] = 0;
   out_9189390373270431982[63] = 0;
   out_9189390373270431982[64] = 0;
   out_9189390373270431982[65] = 0;
}
void h_10(double *state, double *unused, double *out_2426365442037283271) {
   out_2426365442037283271[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2426365442037283271[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2426365442037283271[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6739971248024717518) {
   out_6739971248024717518[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6739971248024717518[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6739971248024717518[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6739971248024717518[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6739971248024717518[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6739971248024717518[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6739971248024717518[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6739971248024717518[7] = 0;
   out_6739971248024717518[8] = 0;
   out_6739971248024717518[9] = 0;
   out_6739971248024717518[10] = 0;
   out_6739971248024717518[11] = 0;
   out_6739971248024717518[12] = 0;
   out_6739971248024717518[13] = 0;
   out_6739971248024717518[14] = 0;
   out_6739971248024717518[15] = 0;
   out_6739971248024717518[16] = 1;
   out_6739971248024717518[17] = 0;
   out_6739971248024717518[18] = 0;
   out_6739971248024717518[19] = 1;
   out_6739971248024717518[20] = 0;
   out_6739971248024717518[21] = 0;
   out_6739971248024717518[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6739971248024717518[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6739971248024717518[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6739971248024717518[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6739971248024717518[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6739971248024717518[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6739971248024717518[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6739971248024717518[29] = 0;
   out_6739971248024717518[30] = 0;
   out_6739971248024717518[31] = 0;
   out_6739971248024717518[32] = 0;
   out_6739971248024717518[33] = 0;
   out_6739971248024717518[34] = 0;
   out_6739971248024717518[35] = 0;
   out_6739971248024717518[36] = 0;
   out_6739971248024717518[37] = 0;
   out_6739971248024717518[38] = 0;
   out_6739971248024717518[39] = 1;
   out_6739971248024717518[40] = 0;
   out_6739971248024717518[41] = 0;
   out_6739971248024717518[42] = 1;
   out_6739971248024717518[43] = 0;
   out_6739971248024717518[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6739971248024717518[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6739971248024717518[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6739971248024717518[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6739971248024717518[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6739971248024717518[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6739971248024717518[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6739971248024717518[51] = 0;
   out_6739971248024717518[52] = 0;
   out_6739971248024717518[53] = 0;
   out_6739971248024717518[54] = 0;
   out_6739971248024717518[55] = 0;
   out_6739971248024717518[56] = 0;
   out_6739971248024717518[57] = 0;
   out_6739971248024717518[58] = 0;
   out_6739971248024717518[59] = 0;
   out_6739971248024717518[60] = 0;
   out_6739971248024717518[61] = 0;
   out_6739971248024717518[62] = 1;
   out_6739971248024717518[63] = 0;
   out_6739971248024717518[64] = 0;
   out_6739971248024717518[65] = 1;
}
void h_12(double *state, double *unused, double *out_178634462741645431) {
   out_178634462741645431[0] = state[0];
   out_178634462741645431[1] = state[1];
   out_178634462741645431[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4411123611868060832) {
   out_4411123611868060832[0] = 1;
   out_4411123611868060832[1] = 0;
   out_4411123611868060832[2] = 0;
   out_4411123611868060832[3] = 0;
   out_4411123611868060832[4] = 0;
   out_4411123611868060832[5] = 0;
   out_4411123611868060832[6] = 0;
   out_4411123611868060832[7] = 0;
   out_4411123611868060832[8] = 0;
   out_4411123611868060832[9] = 0;
   out_4411123611868060832[10] = 0;
   out_4411123611868060832[11] = 0;
   out_4411123611868060832[12] = 0;
   out_4411123611868060832[13] = 0;
   out_4411123611868060832[14] = 0;
   out_4411123611868060832[15] = 0;
   out_4411123611868060832[16] = 0;
   out_4411123611868060832[17] = 0;
   out_4411123611868060832[18] = 0;
   out_4411123611868060832[19] = 0;
   out_4411123611868060832[20] = 0;
   out_4411123611868060832[21] = 0;
   out_4411123611868060832[22] = 0;
   out_4411123611868060832[23] = 1;
   out_4411123611868060832[24] = 0;
   out_4411123611868060832[25] = 0;
   out_4411123611868060832[26] = 0;
   out_4411123611868060832[27] = 0;
   out_4411123611868060832[28] = 0;
   out_4411123611868060832[29] = 0;
   out_4411123611868060832[30] = 0;
   out_4411123611868060832[31] = 0;
   out_4411123611868060832[32] = 0;
   out_4411123611868060832[33] = 0;
   out_4411123611868060832[34] = 0;
   out_4411123611868060832[35] = 0;
   out_4411123611868060832[36] = 0;
   out_4411123611868060832[37] = 0;
   out_4411123611868060832[38] = 0;
   out_4411123611868060832[39] = 0;
   out_4411123611868060832[40] = 0;
   out_4411123611868060832[41] = 0;
   out_4411123611868060832[42] = 0;
   out_4411123611868060832[43] = 0;
   out_4411123611868060832[44] = 0;
   out_4411123611868060832[45] = 0;
   out_4411123611868060832[46] = 1;
   out_4411123611868060832[47] = 0;
   out_4411123611868060832[48] = 0;
   out_4411123611868060832[49] = 0;
   out_4411123611868060832[50] = 0;
   out_4411123611868060832[51] = 0;
   out_4411123611868060832[52] = 0;
   out_4411123611868060832[53] = 0;
   out_4411123611868060832[54] = 0;
   out_4411123611868060832[55] = 0;
   out_4411123611868060832[56] = 0;
   out_4411123611868060832[57] = 0;
   out_4411123611868060832[58] = 0;
   out_4411123611868060832[59] = 0;
   out_4411123611868060832[60] = 0;
   out_4411123611868060832[61] = 0;
   out_4411123611868060832[62] = 0;
   out_4411123611868060832[63] = 0;
   out_4411123611868060832[64] = 0;
   out_4411123611868060832[65] = 0;
}
void h_31(double *state, double *unused, double *out_8342889678123320940) {
   out_8342889678123320940[0] = state[7];
   out_8342889678123320940[1] = state[8];
   out_8342889678123320940[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1665560579543047123) {
   out_1665560579543047123[0] = 0;
   out_1665560579543047123[1] = 0;
   out_1665560579543047123[2] = 0;
   out_1665560579543047123[3] = 0;
   out_1665560579543047123[4] = 0;
   out_1665560579543047123[5] = 0;
   out_1665560579543047123[6] = 0;
   out_1665560579543047123[7] = 1;
   out_1665560579543047123[8] = 0;
   out_1665560579543047123[9] = 0;
   out_1665560579543047123[10] = 0;
   out_1665560579543047123[11] = 0;
   out_1665560579543047123[12] = 0;
   out_1665560579543047123[13] = 0;
   out_1665560579543047123[14] = 0;
   out_1665560579543047123[15] = 0;
   out_1665560579543047123[16] = 0;
   out_1665560579543047123[17] = 0;
   out_1665560579543047123[18] = 0;
   out_1665560579543047123[19] = 0;
   out_1665560579543047123[20] = 0;
   out_1665560579543047123[21] = 0;
   out_1665560579543047123[22] = 0;
   out_1665560579543047123[23] = 0;
   out_1665560579543047123[24] = 0;
   out_1665560579543047123[25] = 0;
   out_1665560579543047123[26] = 0;
   out_1665560579543047123[27] = 0;
   out_1665560579543047123[28] = 0;
   out_1665560579543047123[29] = 0;
   out_1665560579543047123[30] = 1;
   out_1665560579543047123[31] = 0;
   out_1665560579543047123[32] = 0;
   out_1665560579543047123[33] = 0;
   out_1665560579543047123[34] = 0;
   out_1665560579543047123[35] = 0;
   out_1665560579543047123[36] = 0;
   out_1665560579543047123[37] = 0;
   out_1665560579543047123[38] = 0;
   out_1665560579543047123[39] = 0;
   out_1665560579543047123[40] = 0;
   out_1665560579543047123[41] = 0;
   out_1665560579543047123[42] = 0;
   out_1665560579543047123[43] = 0;
   out_1665560579543047123[44] = 0;
   out_1665560579543047123[45] = 0;
   out_1665560579543047123[46] = 0;
   out_1665560579543047123[47] = 0;
   out_1665560579543047123[48] = 0;
   out_1665560579543047123[49] = 0;
   out_1665560579543047123[50] = 0;
   out_1665560579543047123[51] = 0;
   out_1665560579543047123[52] = 0;
   out_1665560579543047123[53] = 1;
   out_1665560579543047123[54] = 0;
   out_1665560579543047123[55] = 0;
   out_1665560579543047123[56] = 0;
   out_1665560579543047123[57] = 0;
   out_1665560579543047123[58] = 0;
   out_1665560579543047123[59] = 0;
   out_1665560579543047123[60] = 0;
   out_1665560579543047123[61] = 0;
   out_1665560579543047123[62] = 0;
   out_1665560579543047123[63] = 0;
   out_1665560579543047123[64] = 0;
   out_1665560579543047123[65] = 0;
}
void h_32(double *state, double *unused, double *out_8151265232605344810) {
   out_8151265232605344810[0] = state[3];
   out_8151265232605344810[1] = state[4];
   out_8151265232605344810[2] = state[5];
   out_8151265232605344810[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3691957312836379938) {
   out_3691957312836379938[0] = 0;
   out_3691957312836379938[1] = 0;
   out_3691957312836379938[2] = 0;
   out_3691957312836379938[3] = 1;
   out_3691957312836379938[4] = 0;
   out_3691957312836379938[5] = 0;
   out_3691957312836379938[6] = 0;
   out_3691957312836379938[7] = 0;
   out_3691957312836379938[8] = 0;
   out_3691957312836379938[9] = 0;
   out_3691957312836379938[10] = 0;
   out_3691957312836379938[11] = 0;
   out_3691957312836379938[12] = 0;
   out_3691957312836379938[13] = 0;
   out_3691957312836379938[14] = 0;
   out_3691957312836379938[15] = 0;
   out_3691957312836379938[16] = 0;
   out_3691957312836379938[17] = 0;
   out_3691957312836379938[18] = 0;
   out_3691957312836379938[19] = 0;
   out_3691957312836379938[20] = 0;
   out_3691957312836379938[21] = 0;
   out_3691957312836379938[22] = 0;
   out_3691957312836379938[23] = 0;
   out_3691957312836379938[24] = 0;
   out_3691957312836379938[25] = 0;
   out_3691957312836379938[26] = 1;
   out_3691957312836379938[27] = 0;
   out_3691957312836379938[28] = 0;
   out_3691957312836379938[29] = 0;
   out_3691957312836379938[30] = 0;
   out_3691957312836379938[31] = 0;
   out_3691957312836379938[32] = 0;
   out_3691957312836379938[33] = 0;
   out_3691957312836379938[34] = 0;
   out_3691957312836379938[35] = 0;
   out_3691957312836379938[36] = 0;
   out_3691957312836379938[37] = 0;
   out_3691957312836379938[38] = 0;
   out_3691957312836379938[39] = 0;
   out_3691957312836379938[40] = 0;
   out_3691957312836379938[41] = 0;
   out_3691957312836379938[42] = 0;
   out_3691957312836379938[43] = 0;
   out_3691957312836379938[44] = 0;
   out_3691957312836379938[45] = 0;
   out_3691957312836379938[46] = 0;
   out_3691957312836379938[47] = 0;
   out_3691957312836379938[48] = 0;
   out_3691957312836379938[49] = 1;
   out_3691957312836379938[50] = 0;
   out_3691957312836379938[51] = 0;
   out_3691957312836379938[52] = 0;
   out_3691957312836379938[53] = 0;
   out_3691957312836379938[54] = 0;
   out_3691957312836379938[55] = 0;
   out_3691957312836379938[56] = 0;
   out_3691957312836379938[57] = 0;
   out_3691957312836379938[58] = 0;
   out_3691957312836379938[59] = 0;
   out_3691957312836379938[60] = 0;
   out_3691957312836379938[61] = 0;
   out_3691957312836379938[62] = 0;
   out_3691957312836379938[63] = 0;
   out_3691957312836379938[64] = 0;
   out_3691957312836379938[65] = 0;
   out_3691957312836379938[66] = 0;
   out_3691957312836379938[67] = 0;
   out_3691957312836379938[68] = 0;
   out_3691957312836379938[69] = 0;
   out_3691957312836379938[70] = 0;
   out_3691957312836379938[71] = 0;
   out_3691957312836379938[72] = 1;
   out_3691957312836379938[73] = 0;
   out_3691957312836379938[74] = 0;
   out_3691957312836379938[75] = 0;
   out_3691957312836379938[76] = 0;
   out_3691957312836379938[77] = 0;
   out_3691957312836379938[78] = 0;
   out_3691957312836379938[79] = 0;
   out_3691957312836379938[80] = 0;
   out_3691957312836379938[81] = 0;
   out_3691957312836379938[82] = 0;
   out_3691957312836379938[83] = 0;
   out_3691957312836379938[84] = 0;
   out_3691957312836379938[85] = 0;
   out_3691957312836379938[86] = 0;
   out_3691957312836379938[87] = 0;
}
void h_13(double *state, double *unused, double *out_6316801585668289047) {
   out_6316801585668289047[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6316801585668289047[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6316801585668289047[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5625168891511364287) {
   out_5625168891511364287[0] = 0;
   out_5625168891511364287[1] = 0;
   out_5625168891511364287[2] = 0;
   out_5625168891511364287[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5625168891511364287[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5625168891511364287[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5625168891511364287[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5625168891511364287[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5625168891511364287[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5625168891511364287[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5625168891511364287[10] = 0;
   out_5625168891511364287[11] = 0;
   out_5625168891511364287[12] = 0;
   out_5625168891511364287[13] = 0;
   out_5625168891511364287[14] = 0;
   out_5625168891511364287[15] = 0;
   out_5625168891511364287[16] = 0;
   out_5625168891511364287[17] = 0;
   out_5625168891511364287[18] = 0;
   out_5625168891511364287[19] = 0;
   out_5625168891511364287[20] = 0;
   out_5625168891511364287[21] = 0;
   out_5625168891511364287[22] = 0;
   out_5625168891511364287[23] = 0;
   out_5625168891511364287[24] = 0;
   out_5625168891511364287[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5625168891511364287[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5625168891511364287[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5625168891511364287[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5625168891511364287[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5625168891511364287[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5625168891511364287[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5625168891511364287[32] = 0;
   out_5625168891511364287[33] = 0;
   out_5625168891511364287[34] = 0;
   out_5625168891511364287[35] = 0;
   out_5625168891511364287[36] = 0;
   out_5625168891511364287[37] = 0;
   out_5625168891511364287[38] = 0;
   out_5625168891511364287[39] = 0;
   out_5625168891511364287[40] = 0;
   out_5625168891511364287[41] = 0;
   out_5625168891511364287[42] = 0;
   out_5625168891511364287[43] = 0;
   out_5625168891511364287[44] = 0;
   out_5625168891511364287[45] = 0;
   out_5625168891511364287[46] = 0;
   out_5625168891511364287[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5625168891511364287[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5625168891511364287[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5625168891511364287[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5625168891511364287[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5625168891511364287[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5625168891511364287[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5625168891511364287[54] = 0;
   out_5625168891511364287[55] = 0;
   out_5625168891511364287[56] = 0;
   out_5625168891511364287[57] = 0;
   out_5625168891511364287[58] = 0;
   out_5625168891511364287[59] = 0;
   out_5625168891511364287[60] = 0;
   out_5625168891511364287[61] = 0;
   out_5625168891511364287[62] = 0;
   out_5625168891511364287[63] = 0;
   out_5625168891511364287[64] = 0;
   out_5625168891511364287[65] = 0;
}
void h_14(double *state, double *unused, double *out_1266080828111930518) {
   out_1266080828111930518[0] = state[10];
   out_1266080828111930518[1] = state[11];
   out_1266080828111930518[2] = state[12];
}
void H_14(double *state, double *unused, double *out_9189390373270431982) {
   out_9189390373270431982[0] = 0;
   out_9189390373270431982[1] = 0;
   out_9189390373270431982[2] = 0;
   out_9189390373270431982[3] = 0;
   out_9189390373270431982[4] = 0;
   out_9189390373270431982[5] = 0;
   out_9189390373270431982[6] = 0;
   out_9189390373270431982[7] = 0;
   out_9189390373270431982[8] = 0;
   out_9189390373270431982[9] = 0;
   out_9189390373270431982[10] = 1;
   out_9189390373270431982[11] = 0;
   out_9189390373270431982[12] = 0;
   out_9189390373270431982[13] = 0;
   out_9189390373270431982[14] = 0;
   out_9189390373270431982[15] = 0;
   out_9189390373270431982[16] = 0;
   out_9189390373270431982[17] = 0;
   out_9189390373270431982[18] = 0;
   out_9189390373270431982[19] = 0;
   out_9189390373270431982[20] = 0;
   out_9189390373270431982[21] = 0;
   out_9189390373270431982[22] = 0;
   out_9189390373270431982[23] = 0;
   out_9189390373270431982[24] = 0;
   out_9189390373270431982[25] = 0;
   out_9189390373270431982[26] = 0;
   out_9189390373270431982[27] = 0;
   out_9189390373270431982[28] = 0;
   out_9189390373270431982[29] = 0;
   out_9189390373270431982[30] = 0;
   out_9189390373270431982[31] = 0;
   out_9189390373270431982[32] = 0;
   out_9189390373270431982[33] = 1;
   out_9189390373270431982[34] = 0;
   out_9189390373270431982[35] = 0;
   out_9189390373270431982[36] = 0;
   out_9189390373270431982[37] = 0;
   out_9189390373270431982[38] = 0;
   out_9189390373270431982[39] = 0;
   out_9189390373270431982[40] = 0;
   out_9189390373270431982[41] = 0;
   out_9189390373270431982[42] = 0;
   out_9189390373270431982[43] = 0;
   out_9189390373270431982[44] = 0;
   out_9189390373270431982[45] = 0;
   out_9189390373270431982[46] = 0;
   out_9189390373270431982[47] = 0;
   out_9189390373270431982[48] = 0;
   out_9189390373270431982[49] = 0;
   out_9189390373270431982[50] = 0;
   out_9189390373270431982[51] = 0;
   out_9189390373270431982[52] = 0;
   out_9189390373270431982[53] = 0;
   out_9189390373270431982[54] = 0;
   out_9189390373270431982[55] = 0;
   out_9189390373270431982[56] = 1;
   out_9189390373270431982[57] = 0;
   out_9189390373270431982[58] = 0;
   out_9189390373270431982[59] = 0;
   out_9189390373270431982[60] = 0;
   out_9189390373270431982[61] = 0;
   out_9189390373270431982[62] = 0;
   out_9189390373270431982[63] = 0;
   out_9189390373270431982[64] = 0;
   out_9189390373270431982[65] = 0;
}
void h_33(double *state, double *unused, double *out_6178890621864734831) {
   out_6178890621864734831[0] = state[16];
   out_6178890621864734831[1] = state[17];
   out_6178890621864734831[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2913360957888557647) {
   out_2913360957888557647[0] = 0;
   out_2913360957888557647[1] = 0;
   out_2913360957888557647[2] = 0;
   out_2913360957888557647[3] = 0;
   out_2913360957888557647[4] = 0;
   out_2913360957888557647[5] = 0;
   out_2913360957888557647[6] = 0;
   out_2913360957888557647[7] = 0;
   out_2913360957888557647[8] = 0;
   out_2913360957888557647[9] = 0;
   out_2913360957888557647[10] = 0;
   out_2913360957888557647[11] = 0;
   out_2913360957888557647[12] = 0;
   out_2913360957888557647[13] = 0;
   out_2913360957888557647[14] = 0;
   out_2913360957888557647[15] = 0;
   out_2913360957888557647[16] = 1;
   out_2913360957888557647[17] = 0;
   out_2913360957888557647[18] = 0;
   out_2913360957888557647[19] = 0;
   out_2913360957888557647[20] = 0;
   out_2913360957888557647[21] = 0;
   out_2913360957888557647[22] = 0;
   out_2913360957888557647[23] = 0;
   out_2913360957888557647[24] = 0;
   out_2913360957888557647[25] = 0;
   out_2913360957888557647[26] = 0;
   out_2913360957888557647[27] = 0;
   out_2913360957888557647[28] = 0;
   out_2913360957888557647[29] = 0;
   out_2913360957888557647[30] = 0;
   out_2913360957888557647[31] = 0;
   out_2913360957888557647[32] = 0;
   out_2913360957888557647[33] = 0;
   out_2913360957888557647[34] = 0;
   out_2913360957888557647[35] = 0;
   out_2913360957888557647[36] = 0;
   out_2913360957888557647[37] = 0;
   out_2913360957888557647[38] = 0;
   out_2913360957888557647[39] = 1;
   out_2913360957888557647[40] = 0;
   out_2913360957888557647[41] = 0;
   out_2913360957888557647[42] = 0;
   out_2913360957888557647[43] = 0;
   out_2913360957888557647[44] = 0;
   out_2913360957888557647[45] = 0;
   out_2913360957888557647[46] = 0;
   out_2913360957888557647[47] = 0;
   out_2913360957888557647[48] = 0;
   out_2913360957888557647[49] = 0;
   out_2913360957888557647[50] = 0;
   out_2913360957888557647[51] = 0;
   out_2913360957888557647[52] = 0;
   out_2913360957888557647[53] = 0;
   out_2913360957888557647[54] = 0;
   out_2913360957888557647[55] = 0;
   out_2913360957888557647[56] = 0;
   out_2913360957888557647[57] = 0;
   out_2913360957888557647[58] = 0;
   out_2913360957888557647[59] = 0;
   out_2913360957888557647[60] = 0;
   out_2913360957888557647[61] = 0;
   out_2913360957888557647[62] = 1;
   out_2913360957888557647[63] = 0;
   out_2913360957888557647[64] = 0;
   out_2913360957888557647[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7402070304101322236) {
  H(in_vec, out_7402070304101322236);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_460665167769025615) {
  err_fun(nom_x, delta_x, out_460665167769025615);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6625240037991151673) {
  inv_err_fun(nom_x, true_x, out_6625240037991151673);
}
void live_H_mod_fun(double *state, double *out_6172559208002130840) {
  H_mod_fun(state, out_6172559208002130840);
}
void live_f_fun(double *state, double dt, double *out_3016561442420806540) {
  f_fun(state,  dt, out_3016561442420806540);
}
void live_F_fun(double *state, double dt, double *out_6833536681640660446) {
  F_fun(state,  dt, out_6833536681640660446);
}
void live_h_4(double *state, double *unused, double *out_1804053058314886230) {
  h_4(state, unused, out_1804053058314886230);
}
void live_H_4(double *state, double *unused, double *out_1970134765174672164) {
  H_4(state, unused, out_1970134765174672164);
}
void live_h_9(double *state, double *unused, double *out_1266080828111930518) {
  h_9(state, unused, out_1266080828111930518);
}
void live_H_9(double *state, double *unused, double *out_9189390373270431982) {
  H_9(state, unused, out_9189390373270431982);
}
void live_h_10(double *state, double *unused, double *out_2426365442037283271) {
  h_10(state, unused, out_2426365442037283271);
}
void live_H_10(double *state, double *unused, double *out_6739971248024717518) {
  H_10(state, unused, out_6739971248024717518);
}
void live_h_12(double *state, double *unused, double *out_178634462741645431) {
  h_12(state, unused, out_178634462741645431);
}
void live_H_12(double *state, double *unused, double *out_4411123611868060832) {
  H_12(state, unused, out_4411123611868060832);
}
void live_h_31(double *state, double *unused, double *out_8342889678123320940) {
  h_31(state, unused, out_8342889678123320940);
}
void live_H_31(double *state, double *unused, double *out_1665560579543047123) {
  H_31(state, unused, out_1665560579543047123);
}
void live_h_32(double *state, double *unused, double *out_8151265232605344810) {
  h_32(state, unused, out_8151265232605344810);
}
void live_H_32(double *state, double *unused, double *out_3691957312836379938) {
  H_32(state, unused, out_3691957312836379938);
}
void live_h_13(double *state, double *unused, double *out_6316801585668289047) {
  h_13(state, unused, out_6316801585668289047);
}
void live_H_13(double *state, double *unused, double *out_5625168891511364287) {
  H_13(state, unused, out_5625168891511364287);
}
void live_h_14(double *state, double *unused, double *out_1266080828111930518) {
  h_14(state, unused, out_1266080828111930518);
}
void live_H_14(double *state, double *unused, double *out_9189390373270431982) {
  H_14(state, unused, out_9189390373270431982);
}
void live_h_33(double *state, double *unused, double *out_6178890621864734831) {
  h_33(state, unused, out_6178890621864734831);
}
void live_H_33(double *state, double *unused, double *out_2913360957888557647) {
  H_33(state, unused, out_2913360957888557647);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
