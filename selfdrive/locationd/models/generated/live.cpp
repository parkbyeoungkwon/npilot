#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1526956633722536676) {
   out_1526956633722536676[0] = 0;
   out_1526956633722536676[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1526956633722536676[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1526956633722536676[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1526956633722536676[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1526956633722536676[5] = -sin(in_vec[1]);
   out_1526956633722536676[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1526956633722536676[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1526956633722536676[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1526956633722536676[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1526956633722536676[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1526956633722536676[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1526956633722536676[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1526956633722536676[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1526956633722536676[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1526956633722536676[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1526956633722536676[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1526956633722536676[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3230416160365452320) {
   out_3230416160365452320[0] = delta_x[0] + nom_x[0];
   out_3230416160365452320[1] = delta_x[1] + nom_x[1];
   out_3230416160365452320[2] = delta_x[2] + nom_x[2];
   out_3230416160365452320[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3230416160365452320[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3230416160365452320[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3230416160365452320[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3230416160365452320[7] = delta_x[6] + nom_x[7];
   out_3230416160365452320[8] = delta_x[7] + nom_x[8];
   out_3230416160365452320[9] = delta_x[8] + nom_x[9];
   out_3230416160365452320[10] = delta_x[9] + nom_x[10];
   out_3230416160365452320[11] = delta_x[10] + nom_x[11];
   out_3230416160365452320[12] = delta_x[11] + nom_x[12];
   out_3230416160365452320[13] = delta_x[12] + nom_x[13];
   out_3230416160365452320[14] = delta_x[13] + nom_x[14];
   out_3230416160365452320[15] = delta_x[14] + nom_x[15];
   out_3230416160365452320[16] = delta_x[15] + nom_x[16];
   out_3230416160365452320[17] = delta_x[16] + nom_x[17];
   out_3230416160365452320[18] = delta_x[17] + nom_x[18];
   out_3230416160365452320[19] = delta_x[18] + nom_x[19];
   out_3230416160365452320[20] = delta_x[19] + nom_x[20];
   out_3230416160365452320[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3644280506359970566) {
   out_3644280506359970566[0] = -nom_x[0] + true_x[0];
   out_3644280506359970566[1] = -nom_x[1] + true_x[1];
   out_3644280506359970566[2] = -nom_x[2] + true_x[2];
   out_3644280506359970566[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3644280506359970566[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3644280506359970566[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3644280506359970566[6] = -nom_x[7] + true_x[7];
   out_3644280506359970566[7] = -nom_x[8] + true_x[8];
   out_3644280506359970566[8] = -nom_x[9] + true_x[9];
   out_3644280506359970566[9] = -nom_x[10] + true_x[10];
   out_3644280506359970566[10] = -nom_x[11] + true_x[11];
   out_3644280506359970566[11] = -nom_x[12] + true_x[12];
   out_3644280506359970566[12] = -nom_x[13] + true_x[13];
   out_3644280506359970566[13] = -nom_x[14] + true_x[14];
   out_3644280506359970566[14] = -nom_x[15] + true_x[15];
   out_3644280506359970566[15] = -nom_x[16] + true_x[16];
   out_3644280506359970566[16] = -nom_x[17] + true_x[17];
   out_3644280506359970566[17] = -nom_x[18] + true_x[18];
   out_3644280506359970566[18] = -nom_x[19] + true_x[19];
   out_3644280506359970566[19] = -nom_x[20] + true_x[20];
   out_3644280506359970566[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5597765590530589087) {
   out_5597765590530589087[0] = 1.0;
   out_5597765590530589087[1] = 0;
   out_5597765590530589087[2] = 0;
   out_5597765590530589087[3] = 0;
   out_5597765590530589087[4] = 0;
   out_5597765590530589087[5] = 0;
   out_5597765590530589087[6] = 0;
   out_5597765590530589087[7] = 0;
   out_5597765590530589087[8] = 0;
   out_5597765590530589087[9] = 0;
   out_5597765590530589087[10] = 0;
   out_5597765590530589087[11] = 0;
   out_5597765590530589087[12] = 0;
   out_5597765590530589087[13] = 0;
   out_5597765590530589087[14] = 0;
   out_5597765590530589087[15] = 0;
   out_5597765590530589087[16] = 0;
   out_5597765590530589087[17] = 0;
   out_5597765590530589087[18] = 0;
   out_5597765590530589087[19] = 0;
   out_5597765590530589087[20] = 0;
   out_5597765590530589087[21] = 0;
   out_5597765590530589087[22] = 1.0;
   out_5597765590530589087[23] = 0;
   out_5597765590530589087[24] = 0;
   out_5597765590530589087[25] = 0;
   out_5597765590530589087[26] = 0;
   out_5597765590530589087[27] = 0;
   out_5597765590530589087[28] = 0;
   out_5597765590530589087[29] = 0;
   out_5597765590530589087[30] = 0;
   out_5597765590530589087[31] = 0;
   out_5597765590530589087[32] = 0;
   out_5597765590530589087[33] = 0;
   out_5597765590530589087[34] = 0;
   out_5597765590530589087[35] = 0;
   out_5597765590530589087[36] = 0;
   out_5597765590530589087[37] = 0;
   out_5597765590530589087[38] = 0;
   out_5597765590530589087[39] = 0;
   out_5597765590530589087[40] = 0;
   out_5597765590530589087[41] = 0;
   out_5597765590530589087[42] = 0;
   out_5597765590530589087[43] = 0;
   out_5597765590530589087[44] = 1.0;
   out_5597765590530589087[45] = 0;
   out_5597765590530589087[46] = 0;
   out_5597765590530589087[47] = 0;
   out_5597765590530589087[48] = 0;
   out_5597765590530589087[49] = 0;
   out_5597765590530589087[50] = 0;
   out_5597765590530589087[51] = 0;
   out_5597765590530589087[52] = 0;
   out_5597765590530589087[53] = 0;
   out_5597765590530589087[54] = 0;
   out_5597765590530589087[55] = 0;
   out_5597765590530589087[56] = 0;
   out_5597765590530589087[57] = 0;
   out_5597765590530589087[58] = 0;
   out_5597765590530589087[59] = 0;
   out_5597765590530589087[60] = 0;
   out_5597765590530589087[61] = 0;
   out_5597765590530589087[62] = 0;
   out_5597765590530589087[63] = 0;
   out_5597765590530589087[64] = 0;
   out_5597765590530589087[65] = 0;
   out_5597765590530589087[66] = -0.5*state[4];
   out_5597765590530589087[67] = -0.5*state[5];
   out_5597765590530589087[68] = -0.5*state[6];
   out_5597765590530589087[69] = 0;
   out_5597765590530589087[70] = 0;
   out_5597765590530589087[71] = 0;
   out_5597765590530589087[72] = 0;
   out_5597765590530589087[73] = 0;
   out_5597765590530589087[74] = 0;
   out_5597765590530589087[75] = 0;
   out_5597765590530589087[76] = 0;
   out_5597765590530589087[77] = 0;
   out_5597765590530589087[78] = 0;
   out_5597765590530589087[79] = 0;
   out_5597765590530589087[80] = 0;
   out_5597765590530589087[81] = 0;
   out_5597765590530589087[82] = 0;
   out_5597765590530589087[83] = 0;
   out_5597765590530589087[84] = 0;
   out_5597765590530589087[85] = 0;
   out_5597765590530589087[86] = 0;
   out_5597765590530589087[87] = 0.5*state[3];
   out_5597765590530589087[88] = 0.5*state[6];
   out_5597765590530589087[89] = -0.5*state[5];
   out_5597765590530589087[90] = 0;
   out_5597765590530589087[91] = 0;
   out_5597765590530589087[92] = 0;
   out_5597765590530589087[93] = 0;
   out_5597765590530589087[94] = 0;
   out_5597765590530589087[95] = 0;
   out_5597765590530589087[96] = 0;
   out_5597765590530589087[97] = 0;
   out_5597765590530589087[98] = 0;
   out_5597765590530589087[99] = 0;
   out_5597765590530589087[100] = 0;
   out_5597765590530589087[101] = 0;
   out_5597765590530589087[102] = 0;
   out_5597765590530589087[103] = 0;
   out_5597765590530589087[104] = 0;
   out_5597765590530589087[105] = 0;
   out_5597765590530589087[106] = 0;
   out_5597765590530589087[107] = 0;
   out_5597765590530589087[108] = -0.5*state[6];
   out_5597765590530589087[109] = 0.5*state[3];
   out_5597765590530589087[110] = 0.5*state[4];
   out_5597765590530589087[111] = 0;
   out_5597765590530589087[112] = 0;
   out_5597765590530589087[113] = 0;
   out_5597765590530589087[114] = 0;
   out_5597765590530589087[115] = 0;
   out_5597765590530589087[116] = 0;
   out_5597765590530589087[117] = 0;
   out_5597765590530589087[118] = 0;
   out_5597765590530589087[119] = 0;
   out_5597765590530589087[120] = 0;
   out_5597765590530589087[121] = 0;
   out_5597765590530589087[122] = 0;
   out_5597765590530589087[123] = 0;
   out_5597765590530589087[124] = 0;
   out_5597765590530589087[125] = 0;
   out_5597765590530589087[126] = 0;
   out_5597765590530589087[127] = 0;
   out_5597765590530589087[128] = 0;
   out_5597765590530589087[129] = 0.5*state[5];
   out_5597765590530589087[130] = -0.5*state[4];
   out_5597765590530589087[131] = 0.5*state[3];
   out_5597765590530589087[132] = 0;
   out_5597765590530589087[133] = 0;
   out_5597765590530589087[134] = 0;
   out_5597765590530589087[135] = 0;
   out_5597765590530589087[136] = 0;
   out_5597765590530589087[137] = 0;
   out_5597765590530589087[138] = 0;
   out_5597765590530589087[139] = 0;
   out_5597765590530589087[140] = 0;
   out_5597765590530589087[141] = 0;
   out_5597765590530589087[142] = 0;
   out_5597765590530589087[143] = 0;
   out_5597765590530589087[144] = 0;
   out_5597765590530589087[145] = 0;
   out_5597765590530589087[146] = 0;
   out_5597765590530589087[147] = 0;
   out_5597765590530589087[148] = 0;
   out_5597765590530589087[149] = 0;
   out_5597765590530589087[150] = 0;
   out_5597765590530589087[151] = 0;
   out_5597765590530589087[152] = 0;
   out_5597765590530589087[153] = 1.0;
   out_5597765590530589087[154] = 0;
   out_5597765590530589087[155] = 0;
   out_5597765590530589087[156] = 0;
   out_5597765590530589087[157] = 0;
   out_5597765590530589087[158] = 0;
   out_5597765590530589087[159] = 0;
   out_5597765590530589087[160] = 0;
   out_5597765590530589087[161] = 0;
   out_5597765590530589087[162] = 0;
   out_5597765590530589087[163] = 0;
   out_5597765590530589087[164] = 0;
   out_5597765590530589087[165] = 0;
   out_5597765590530589087[166] = 0;
   out_5597765590530589087[167] = 0;
   out_5597765590530589087[168] = 0;
   out_5597765590530589087[169] = 0;
   out_5597765590530589087[170] = 0;
   out_5597765590530589087[171] = 0;
   out_5597765590530589087[172] = 0;
   out_5597765590530589087[173] = 0;
   out_5597765590530589087[174] = 0;
   out_5597765590530589087[175] = 1.0;
   out_5597765590530589087[176] = 0;
   out_5597765590530589087[177] = 0;
   out_5597765590530589087[178] = 0;
   out_5597765590530589087[179] = 0;
   out_5597765590530589087[180] = 0;
   out_5597765590530589087[181] = 0;
   out_5597765590530589087[182] = 0;
   out_5597765590530589087[183] = 0;
   out_5597765590530589087[184] = 0;
   out_5597765590530589087[185] = 0;
   out_5597765590530589087[186] = 0;
   out_5597765590530589087[187] = 0;
   out_5597765590530589087[188] = 0;
   out_5597765590530589087[189] = 0;
   out_5597765590530589087[190] = 0;
   out_5597765590530589087[191] = 0;
   out_5597765590530589087[192] = 0;
   out_5597765590530589087[193] = 0;
   out_5597765590530589087[194] = 0;
   out_5597765590530589087[195] = 0;
   out_5597765590530589087[196] = 0;
   out_5597765590530589087[197] = 1.0;
   out_5597765590530589087[198] = 0;
   out_5597765590530589087[199] = 0;
   out_5597765590530589087[200] = 0;
   out_5597765590530589087[201] = 0;
   out_5597765590530589087[202] = 0;
   out_5597765590530589087[203] = 0;
   out_5597765590530589087[204] = 0;
   out_5597765590530589087[205] = 0;
   out_5597765590530589087[206] = 0;
   out_5597765590530589087[207] = 0;
   out_5597765590530589087[208] = 0;
   out_5597765590530589087[209] = 0;
   out_5597765590530589087[210] = 0;
   out_5597765590530589087[211] = 0;
   out_5597765590530589087[212] = 0;
   out_5597765590530589087[213] = 0;
   out_5597765590530589087[214] = 0;
   out_5597765590530589087[215] = 0;
   out_5597765590530589087[216] = 0;
   out_5597765590530589087[217] = 0;
   out_5597765590530589087[218] = 0;
   out_5597765590530589087[219] = 1.0;
   out_5597765590530589087[220] = 0;
   out_5597765590530589087[221] = 0;
   out_5597765590530589087[222] = 0;
   out_5597765590530589087[223] = 0;
   out_5597765590530589087[224] = 0;
   out_5597765590530589087[225] = 0;
   out_5597765590530589087[226] = 0;
   out_5597765590530589087[227] = 0;
   out_5597765590530589087[228] = 0;
   out_5597765590530589087[229] = 0;
   out_5597765590530589087[230] = 0;
   out_5597765590530589087[231] = 0;
   out_5597765590530589087[232] = 0;
   out_5597765590530589087[233] = 0;
   out_5597765590530589087[234] = 0;
   out_5597765590530589087[235] = 0;
   out_5597765590530589087[236] = 0;
   out_5597765590530589087[237] = 0;
   out_5597765590530589087[238] = 0;
   out_5597765590530589087[239] = 0;
   out_5597765590530589087[240] = 0;
   out_5597765590530589087[241] = 1.0;
   out_5597765590530589087[242] = 0;
   out_5597765590530589087[243] = 0;
   out_5597765590530589087[244] = 0;
   out_5597765590530589087[245] = 0;
   out_5597765590530589087[246] = 0;
   out_5597765590530589087[247] = 0;
   out_5597765590530589087[248] = 0;
   out_5597765590530589087[249] = 0;
   out_5597765590530589087[250] = 0;
   out_5597765590530589087[251] = 0;
   out_5597765590530589087[252] = 0;
   out_5597765590530589087[253] = 0;
   out_5597765590530589087[254] = 0;
   out_5597765590530589087[255] = 0;
   out_5597765590530589087[256] = 0;
   out_5597765590530589087[257] = 0;
   out_5597765590530589087[258] = 0;
   out_5597765590530589087[259] = 0;
   out_5597765590530589087[260] = 0;
   out_5597765590530589087[261] = 0;
   out_5597765590530589087[262] = 0;
   out_5597765590530589087[263] = 1.0;
   out_5597765590530589087[264] = 0;
   out_5597765590530589087[265] = 0;
   out_5597765590530589087[266] = 0;
   out_5597765590530589087[267] = 0;
   out_5597765590530589087[268] = 0;
   out_5597765590530589087[269] = 0;
   out_5597765590530589087[270] = 0;
   out_5597765590530589087[271] = 0;
   out_5597765590530589087[272] = 0;
   out_5597765590530589087[273] = 0;
   out_5597765590530589087[274] = 0;
   out_5597765590530589087[275] = 0;
   out_5597765590530589087[276] = 0;
   out_5597765590530589087[277] = 0;
   out_5597765590530589087[278] = 0;
   out_5597765590530589087[279] = 0;
   out_5597765590530589087[280] = 0;
   out_5597765590530589087[281] = 0;
   out_5597765590530589087[282] = 0;
   out_5597765590530589087[283] = 0;
   out_5597765590530589087[284] = 0;
   out_5597765590530589087[285] = 1.0;
   out_5597765590530589087[286] = 0;
   out_5597765590530589087[287] = 0;
   out_5597765590530589087[288] = 0;
   out_5597765590530589087[289] = 0;
   out_5597765590530589087[290] = 0;
   out_5597765590530589087[291] = 0;
   out_5597765590530589087[292] = 0;
   out_5597765590530589087[293] = 0;
   out_5597765590530589087[294] = 0;
   out_5597765590530589087[295] = 0;
   out_5597765590530589087[296] = 0;
   out_5597765590530589087[297] = 0;
   out_5597765590530589087[298] = 0;
   out_5597765590530589087[299] = 0;
   out_5597765590530589087[300] = 0;
   out_5597765590530589087[301] = 0;
   out_5597765590530589087[302] = 0;
   out_5597765590530589087[303] = 0;
   out_5597765590530589087[304] = 0;
   out_5597765590530589087[305] = 0;
   out_5597765590530589087[306] = 0;
   out_5597765590530589087[307] = 1.0;
   out_5597765590530589087[308] = 0;
   out_5597765590530589087[309] = 0;
   out_5597765590530589087[310] = 0;
   out_5597765590530589087[311] = 0;
   out_5597765590530589087[312] = 0;
   out_5597765590530589087[313] = 0;
   out_5597765590530589087[314] = 0;
   out_5597765590530589087[315] = 0;
   out_5597765590530589087[316] = 0;
   out_5597765590530589087[317] = 0;
   out_5597765590530589087[318] = 0;
   out_5597765590530589087[319] = 0;
   out_5597765590530589087[320] = 0;
   out_5597765590530589087[321] = 0;
   out_5597765590530589087[322] = 0;
   out_5597765590530589087[323] = 0;
   out_5597765590530589087[324] = 0;
   out_5597765590530589087[325] = 0;
   out_5597765590530589087[326] = 0;
   out_5597765590530589087[327] = 0;
   out_5597765590530589087[328] = 0;
   out_5597765590530589087[329] = 1.0;
   out_5597765590530589087[330] = 0;
   out_5597765590530589087[331] = 0;
   out_5597765590530589087[332] = 0;
   out_5597765590530589087[333] = 0;
   out_5597765590530589087[334] = 0;
   out_5597765590530589087[335] = 0;
   out_5597765590530589087[336] = 0;
   out_5597765590530589087[337] = 0;
   out_5597765590530589087[338] = 0;
   out_5597765590530589087[339] = 0;
   out_5597765590530589087[340] = 0;
   out_5597765590530589087[341] = 0;
   out_5597765590530589087[342] = 0;
   out_5597765590530589087[343] = 0;
   out_5597765590530589087[344] = 0;
   out_5597765590530589087[345] = 0;
   out_5597765590530589087[346] = 0;
   out_5597765590530589087[347] = 0;
   out_5597765590530589087[348] = 0;
   out_5597765590530589087[349] = 0;
   out_5597765590530589087[350] = 0;
   out_5597765590530589087[351] = 1.0;
   out_5597765590530589087[352] = 0;
   out_5597765590530589087[353] = 0;
   out_5597765590530589087[354] = 0;
   out_5597765590530589087[355] = 0;
   out_5597765590530589087[356] = 0;
   out_5597765590530589087[357] = 0;
   out_5597765590530589087[358] = 0;
   out_5597765590530589087[359] = 0;
   out_5597765590530589087[360] = 0;
   out_5597765590530589087[361] = 0;
   out_5597765590530589087[362] = 0;
   out_5597765590530589087[363] = 0;
   out_5597765590530589087[364] = 0;
   out_5597765590530589087[365] = 0;
   out_5597765590530589087[366] = 0;
   out_5597765590530589087[367] = 0;
   out_5597765590530589087[368] = 0;
   out_5597765590530589087[369] = 0;
   out_5597765590530589087[370] = 0;
   out_5597765590530589087[371] = 0;
   out_5597765590530589087[372] = 0;
   out_5597765590530589087[373] = 1.0;
   out_5597765590530589087[374] = 0;
   out_5597765590530589087[375] = 0;
   out_5597765590530589087[376] = 0;
   out_5597765590530589087[377] = 0;
   out_5597765590530589087[378] = 0;
   out_5597765590530589087[379] = 0;
   out_5597765590530589087[380] = 0;
   out_5597765590530589087[381] = 0;
   out_5597765590530589087[382] = 0;
   out_5597765590530589087[383] = 0;
   out_5597765590530589087[384] = 0;
   out_5597765590530589087[385] = 0;
   out_5597765590530589087[386] = 0;
   out_5597765590530589087[387] = 0;
   out_5597765590530589087[388] = 0;
   out_5597765590530589087[389] = 0;
   out_5597765590530589087[390] = 0;
   out_5597765590530589087[391] = 0;
   out_5597765590530589087[392] = 0;
   out_5597765590530589087[393] = 0;
   out_5597765590530589087[394] = 0;
   out_5597765590530589087[395] = 1.0;
   out_5597765590530589087[396] = 0;
   out_5597765590530589087[397] = 0;
   out_5597765590530589087[398] = 0;
   out_5597765590530589087[399] = 0;
   out_5597765590530589087[400] = 0;
   out_5597765590530589087[401] = 0;
   out_5597765590530589087[402] = 0;
   out_5597765590530589087[403] = 0;
   out_5597765590530589087[404] = 0;
   out_5597765590530589087[405] = 0;
   out_5597765590530589087[406] = 0;
   out_5597765590530589087[407] = 0;
   out_5597765590530589087[408] = 0;
   out_5597765590530589087[409] = 0;
   out_5597765590530589087[410] = 0;
   out_5597765590530589087[411] = 0;
   out_5597765590530589087[412] = 0;
   out_5597765590530589087[413] = 0;
   out_5597765590530589087[414] = 0;
   out_5597765590530589087[415] = 0;
   out_5597765590530589087[416] = 0;
   out_5597765590530589087[417] = 1.0;
   out_5597765590530589087[418] = 0;
   out_5597765590530589087[419] = 0;
   out_5597765590530589087[420] = 0;
   out_5597765590530589087[421] = 0;
   out_5597765590530589087[422] = 0;
   out_5597765590530589087[423] = 0;
   out_5597765590530589087[424] = 0;
   out_5597765590530589087[425] = 0;
   out_5597765590530589087[426] = 0;
   out_5597765590530589087[427] = 0;
   out_5597765590530589087[428] = 0;
   out_5597765590530589087[429] = 0;
   out_5597765590530589087[430] = 0;
   out_5597765590530589087[431] = 0;
   out_5597765590530589087[432] = 0;
   out_5597765590530589087[433] = 0;
   out_5597765590530589087[434] = 0;
   out_5597765590530589087[435] = 0;
   out_5597765590530589087[436] = 0;
   out_5597765590530589087[437] = 0;
   out_5597765590530589087[438] = 0;
   out_5597765590530589087[439] = 1.0;
   out_5597765590530589087[440] = 0;
   out_5597765590530589087[441] = 0;
   out_5597765590530589087[442] = 0;
   out_5597765590530589087[443] = 0;
   out_5597765590530589087[444] = 0;
   out_5597765590530589087[445] = 0;
   out_5597765590530589087[446] = 0;
   out_5597765590530589087[447] = 0;
   out_5597765590530589087[448] = 0;
   out_5597765590530589087[449] = 0;
   out_5597765590530589087[450] = 0;
   out_5597765590530589087[451] = 0;
   out_5597765590530589087[452] = 0;
   out_5597765590530589087[453] = 0;
   out_5597765590530589087[454] = 0;
   out_5597765590530589087[455] = 0;
   out_5597765590530589087[456] = 0;
   out_5597765590530589087[457] = 0;
   out_5597765590530589087[458] = 0;
   out_5597765590530589087[459] = 0;
   out_5597765590530589087[460] = 0;
   out_5597765590530589087[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1109019082588435211) {
   out_1109019082588435211[0] = dt*state[7] + state[0];
   out_1109019082588435211[1] = dt*state[8] + state[1];
   out_1109019082588435211[2] = dt*state[9] + state[2];
   out_1109019082588435211[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1109019082588435211[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1109019082588435211[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1109019082588435211[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1109019082588435211[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1109019082588435211[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1109019082588435211[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1109019082588435211[10] = state[10];
   out_1109019082588435211[11] = state[11];
   out_1109019082588435211[12] = state[12];
   out_1109019082588435211[13] = state[13];
   out_1109019082588435211[14] = state[14];
   out_1109019082588435211[15] = state[15];
   out_1109019082588435211[16] = state[16];
   out_1109019082588435211[17] = state[17];
   out_1109019082588435211[18] = state[18];
   out_1109019082588435211[19] = state[19];
   out_1109019082588435211[20] = state[20];
   out_1109019082588435211[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4209121349994159134) {
   out_4209121349994159134[0] = 1;
   out_4209121349994159134[1] = 0;
   out_4209121349994159134[2] = 0;
   out_4209121349994159134[3] = 0;
   out_4209121349994159134[4] = 0;
   out_4209121349994159134[5] = 0;
   out_4209121349994159134[6] = dt;
   out_4209121349994159134[7] = 0;
   out_4209121349994159134[8] = 0;
   out_4209121349994159134[9] = 0;
   out_4209121349994159134[10] = 0;
   out_4209121349994159134[11] = 0;
   out_4209121349994159134[12] = 0;
   out_4209121349994159134[13] = 0;
   out_4209121349994159134[14] = 0;
   out_4209121349994159134[15] = 0;
   out_4209121349994159134[16] = 0;
   out_4209121349994159134[17] = 0;
   out_4209121349994159134[18] = 0;
   out_4209121349994159134[19] = 0;
   out_4209121349994159134[20] = 0;
   out_4209121349994159134[21] = 0;
   out_4209121349994159134[22] = 1;
   out_4209121349994159134[23] = 0;
   out_4209121349994159134[24] = 0;
   out_4209121349994159134[25] = 0;
   out_4209121349994159134[26] = 0;
   out_4209121349994159134[27] = 0;
   out_4209121349994159134[28] = dt;
   out_4209121349994159134[29] = 0;
   out_4209121349994159134[30] = 0;
   out_4209121349994159134[31] = 0;
   out_4209121349994159134[32] = 0;
   out_4209121349994159134[33] = 0;
   out_4209121349994159134[34] = 0;
   out_4209121349994159134[35] = 0;
   out_4209121349994159134[36] = 0;
   out_4209121349994159134[37] = 0;
   out_4209121349994159134[38] = 0;
   out_4209121349994159134[39] = 0;
   out_4209121349994159134[40] = 0;
   out_4209121349994159134[41] = 0;
   out_4209121349994159134[42] = 0;
   out_4209121349994159134[43] = 0;
   out_4209121349994159134[44] = 1;
   out_4209121349994159134[45] = 0;
   out_4209121349994159134[46] = 0;
   out_4209121349994159134[47] = 0;
   out_4209121349994159134[48] = 0;
   out_4209121349994159134[49] = 0;
   out_4209121349994159134[50] = dt;
   out_4209121349994159134[51] = 0;
   out_4209121349994159134[52] = 0;
   out_4209121349994159134[53] = 0;
   out_4209121349994159134[54] = 0;
   out_4209121349994159134[55] = 0;
   out_4209121349994159134[56] = 0;
   out_4209121349994159134[57] = 0;
   out_4209121349994159134[58] = 0;
   out_4209121349994159134[59] = 0;
   out_4209121349994159134[60] = 0;
   out_4209121349994159134[61] = 0;
   out_4209121349994159134[62] = 0;
   out_4209121349994159134[63] = 0;
   out_4209121349994159134[64] = 0;
   out_4209121349994159134[65] = 0;
   out_4209121349994159134[66] = 1;
   out_4209121349994159134[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4209121349994159134[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4209121349994159134[69] = 0;
   out_4209121349994159134[70] = 0;
   out_4209121349994159134[71] = 0;
   out_4209121349994159134[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4209121349994159134[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4209121349994159134[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4209121349994159134[75] = 0;
   out_4209121349994159134[76] = 0;
   out_4209121349994159134[77] = 0;
   out_4209121349994159134[78] = 0;
   out_4209121349994159134[79] = 0;
   out_4209121349994159134[80] = 0;
   out_4209121349994159134[81] = 0;
   out_4209121349994159134[82] = 0;
   out_4209121349994159134[83] = 0;
   out_4209121349994159134[84] = 0;
   out_4209121349994159134[85] = 0;
   out_4209121349994159134[86] = 0;
   out_4209121349994159134[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4209121349994159134[88] = 1;
   out_4209121349994159134[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4209121349994159134[90] = 0;
   out_4209121349994159134[91] = 0;
   out_4209121349994159134[92] = 0;
   out_4209121349994159134[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4209121349994159134[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4209121349994159134[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4209121349994159134[96] = 0;
   out_4209121349994159134[97] = 0;
   out_4209121349994159134[98] = 0;
   out_4209121349994159134[99] = 0;
   out_4209121349994159134[100] = 0;
   out_4209121349994159134[101] = 0;
   out_4209121349994159134[102] = 0;
   out_4209121349994159134[103] = 0;
   out_4209121349994159134[104] = 0;
   out_4209121349994159134[105] = 0;
   out_4209121349994159134[106] = 0;
   out_4209121349994159134[107] = 0;
   out_4209121349994159134[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4209121349994159134[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4209121349994159134[110] = 1;
   out_4209121349994159134[111] = 0;
   out_4209121349994159134[112] = 0;
   out_4209121349994159134[113] = 0;
   out_4209121349994159134[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4209121349994159134[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4209121349994159134[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4209121349994159134[117] = 0;
   out_4209121349994159134[118] = 0;
   out_4209121349994159134[119] = 0;
   out_4209121349994159134[120] = 0;
   out_4209121349994159134[121] = 0;
   out_4209121349994159134[122] = 0;
   out_4209121349994159134[123] = 0;
   out_4209121349994159134[124] = 0;
   out_4209121349994159134[125] = 0;
   out_4209121349994159134[126] = 0;
   out_4209121349994159134[127] = 0;
   out_4209121349994159134[128] = 0;
   out_4209121349994159134[129] = 0;
   out_4209121349994159134[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4209121349994159134[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4209121349994159134[132] = 1;
   out_4209121349994159134[133] = 0;
   out_4209121349994159134[134] = 0;
   out_4209121349994159134[135] = 0;
   out_4209121349994159134[136] = 0;
   out_4209121349994159134[137] = 0;
   out_4209121349994159134[138] = 0;
   out_4209121349994159134[139] = 0;
   out_4209121349994159134[140] = 0;
   out_4209121349994159134[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4209121349994159134[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4209121349994159134[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4209121349994159134[144] = 0;
   out_4209121349994159134[145] = 0;
   out_4209121349994159134[146] = 0;
   out_4209121349994159134[147] = 0;
   out_4209121349994159134[148] = 0;
   out_4209121349994159134[149] = 0;
   out_4209121349994159134[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4209121349994159134[151] = 0;
   out_4209121349994159134[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4209121349994159134[153] = 0;
   out_4209121349994159134[154] = 1;
   out_4209121349994159134[155] = 0;
   out_4209121349994159134[156] = 0;
   out_4209121349994159134[157] = 0;
   out_4209121349994159134[158] = 0;
   out_4209121349994159134[159] = 0;
   out_4209121349994159134[160] = 0;
   out_4209121349994159134[161] = 0;
   out_4209121349994159134[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4209121349994159134[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4209121349994159134[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4209121349994159134[165] = 0;
   out_4209121349994159134[166] = 0;
   out_4209121349994159134[167] = 0;
   out_4209121349994159134[168] = 0;
   out_4209121349994159134[169] = 0;
   out_4209121349994159134[170] = 0;
   out_4209121349994159134[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4209121349994159134[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4209121349994159134[173] = 0;
   out_4209121349994159134[174] = 0;
   out_4209121349994159134[175] = 0;
   out_4209121349994159134[176] = 1;
   out_4209121349994159134[177] = 0;
   out_4209121349994159134[178] = 0;
   out_4209121349994159134[179] = 0;
   out_4209121349994159134[180] = 0;
   out_4209121349994159134[181] = 0;
   out_4209121349994159134[182] = 0;
   out_4209121349994159134[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4209121349994159134[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4209121349994159134[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4209121349994159134[186] = 0;
   out_4209121349994159134[187] = 0;
   out_4209121349994159134[188] = 0;
   out_4209121349994159134[189] = 0;
   out_4209121349994159134[190] = 0;
   out_4209121349994159134[191] = 0;
   out_4209121349994159134[192] = 0;
   out_4209121349994159134[193] = 0;
   out_4209121349994159134[194] = 0;
   out_4209121349994159134[195] = 0;
   out_4209121349994159134[196] = 0;
   out_4209121349994159134[197] = 0;
   out_4209121349994159134[198] = 1;
   out_4209121349994159134[199] = 0;
   out_4209121349994159134[200] = 0;
   out_4209121349994159134[201] = 0;
   out_4209121349994159134[202] = 0;
   out_4209121349994159134[203] = 0;
   out_4209121349994159134[204] = 0;
   out_4209121349994159134[205] = 0;
   out_4209121349994159134[206] = 0;
   out_4209121349994159134[207] = 0;
   out_4209121349994159134[208] = 0;
   out_4209121349994159134[209] = 0;
   out_4209121349994159134[210] = 0;
   out_4209121349994159134[211] = 0;
   out_4209121349994159134[212] = 0;
   out_4209121349994159134[213] = 0;
   out_4209121349994159134[214] = 0;
   out_4209121349994159134[215] = 0;
   out_4209121349994159134[216] = 0;
   out_4209121349994159134[217] = 0;
   out_4209121349994159134[218] = 0;
   out_4209121349994159134[219] = 0;
   out_4209121349994159134[220] = 1;
   out_4209121349994159134[221] = 0;
   out_4209121349994159134[222] = 0;
   out_4209121349994159134[223] = 0;
   out_4209121349994159134[224] = 0;
   out_4209121349994159134[225] = 0;
   out_4209121349994159134[226] = 0;
   out_4209121349994159134[227] = 0;
   out_4209121349994159134[228] = 0;
   out_4209121349994159134[229] = 0;
   out_4209121349994159134[230] = 0;
   out_4209121349994159134[231] = 0;
   out_4209121349994159134[232] = 0;
   out_4209121349994159134[233] = 0;
   out_4209121349994159134[234] = 0;
   out_4209121349994159134[235] = 0;
   out_4209121349994159134[236] = 0;
   out_4209121349994159134[237] = 0;
   out_4209121349994159134[238] = 0;
   out_4209121349994159134[239] = 0;
   out_4209121349994159134[240] = 0;
   out_4209121349994159134[241] = 0;
   out_4209121349994159134[242] = 1;
   out_4209121349994159134[243] = 0;
   out_4209121349994159134[244] = 0;
   out_4209121349994159134[245] = 0;
   out_4209121349994159134[246] = 0;
   out_4209121349994159134[247] = 0;
   out_4209121349994159134[248] = 0;
   out_4209121349994159134[249] = 0;
   out_4209121349994159134[250] = 0;
   out_4209121349994159134[251] = 0;
   out_4209121349994159134[252] = 0;
   out_4209121349994159134[253] = 0;
   out_4209121349994159134[254] = 0;
   out_4209121349994159134[255] = 0;
   out_4209121349994159134[256] = 0;
   out_4209121349994159134[257] = 0;
   out_4209121349994159134[258] = 0;
   out_4209121349994159134[259] = 0;
   out_4209121349994159134[260] = 0;
   out_4209121349994159134[261] = 0;
   out_4209121349994159134[262] = 0;
   out_4209121349994159134[263] = 0;
   out_4209121349994159134[264] = 1;
   out_4209121349994159134[265] = 0;
   out_4209121349994159134[266] = 0;
   out_4209121349994159134[267] = 0;
   out_4209121349994159134[268] = 0;
   out_4209121349994159134[269] = 0;
   out_4209121349994159134[270] = 0;
   out_4209121349994159134[271] = 0;
   out_4209121349994159134[272] = 0;
   out_4209121349994159134[273] = 0;
   out_4209121349994159134[274] = 0;
   out_4209121349994159134[275] = 0;
   out_4209121349994159134[276] = 0;
   out_4209121349994159134[277] = 0;
   out_4209121349994159134[278] = 0;
   out_4209121349994159134[279] = 0;
   out_4209121349994159134[280] = 0;
   out_4209121349994159134[281] = 0;
   out_4209121349994159134[282] = 0;
   out_4209121349994159134[283] = 0;
   out_4209121349994159134[284] = 0;
   out_4209121349994159134[285] = 0;
   out_4209121349994159134[286] = 1;
   out_4209121349994159134[287] = 0;
   out_4209121349994159134[288] = 0;
   out_4209121349994159134[289] = 0;
   out_4209121349994159134[290] = 0;
   out_4209121349994159134[291] = 0;
   out_4209121349994159134[292] = 0;
   out_4209121349994159134[293] = 0;
   out_4209121349994159134[294] = 0;
   out_4209121349994159134[295] = 0;
   out_4209121349994159134[296] = 0;
   out_4209121349994159134[297] = 0;
   out_4209121349994159134[298] = 0;
   out_4209121349994159134[299] = 0;
   out_4209121349994159134[300] = 0;
   out_4209121349994159134[301] = 0;
   out_4209121349994159134[302] = 0;
   out_4209121349994159134[303] = 0;
   out_4209121349994159134[304] = 0;
   out_4209121349994159134[305] = 0;
   out_4209121349994159134[306] = 0;
   out_4209121349994159134[307] = 0;
   out_4209121349994159134[308] = 1;
   out_4209121349994159134[309] = 0;
   out_4209121349994159134[310] = 0;
   out_4209121349994159134[311] = 0;
   out_4209121349994159134[312] = 0;
   out_4209121349994159134[313] = 0;
   out_4209121349994159134[314] = 0;
   out_4209121349994159134[315] = 0;
   out_4209121349994159134[316] = 0;
   out_4209121349994159134[317] = 0;
   out_4209121349994159134[318] = 0;
   out_4209121349994159134[319] = 0;
   out_4209121349994159134[320] = 0;
   out_4209121349994159134[321] = 0;
   out_4209121349994159134[322] = 0;
   out_4209121349994159134[323] = 0;
   out_4209121349994159134[324] = 0;
   out_4209121349994159134[325] = 0;
   out_4209121349994159134[326] = 0;
   out_4209121349994159134[327] = 0;
   out_4209121349994159134[328] = 0;
   out_4209121349994159134[329] = 0;
   out_4209121349994159134[330] = 1;
   out_4209121349994159134[331] = 0;
   out_4209121349994159134[332] = 0;
   out_4209121349994159134[333] = 0;
   out_4209121349994159134[334] = 0;
   out_4209121349994159134[335] = 0;
   out_4209121349994159134[336] = 0;
   out_4209121349994159134[337] = 0;
   out_4209121349994159134[338] = 0;
   out_4209121349994159134[339] = 0;
   out_4209121349994159134[340] = 0;
   out_4209121349994159134[341] = 0;
   out_4209121349994159134[342] = 0;
   out_4209121349994159134[343] = 0;
   out_4209121349994159134[344] = 0;
   out_4209121349994159134[345] = 0;
   out_4209121349994159134[346] = 0;
   out_4209121349994159134[347] = 0;
   out_4209121349994159134[348] = 0;
   out_4209121349994159134[349] = 0;
   out_4209121349994159134[350] = 0;
   out_4209121349994159134[351] = 0;
   out_4209121349994159134[352] = 1;
   out_4209121349994159134[353] = 0;
   out_4209121349994159134[354] = 0;
   out_4209121349994159134[355] = 0;
   out_4209121349994159134[356] = 0;
   out_4209121349994159134[357] = 0;
   out_4209121349994159134[358] = 0;
   out_4209121349994159134[359] = 0;
   out_4209121349994159134[360] = 0;
   out_4209121349994159134[361] = 0;
   out_4209121349994159134[362] = 0;
   out_4209121349994159134[363] = 0;
   out_4209121349994159134[364] = 0;
   out_4209121349994159134[365] = 0;
   out_4209121349994159134[366] = 0;
   out_4209121349994159134[367] = 0;
   out_4209121349994159134[368] = 0;
   out_4209121349994159134[369] = 0;
   out_4209121349994159134[370] = 0;
   out_4209121349994159134[371] = 0;
   out_4209121349994159134[372] = 0;
   out_4209121349994159134[373] = 0;
   out_4209121349994159134[374] = 1;
   out_4209121349994159134[375] = 0;
   out_4209121349994159134[376] = 0;
   out_4209121349994159134[377] = 0;
   out_4209121349994159134[378] = 0;
   out_4209121349994159134[379] = 0;
   out_4209121349994159134[380] = 0;
   out_4209121349994159134[381] = 0;
   out_4209121349994159134[382] = 0;
   out_4209121349994159134[383] = 0;
   out_4209121349994159134[384] = 0;
   out_4209121349994159134[385] = 0;
   out_4209121349994159134[386] = 0;
   out_4209121349994159134[387] = 0;
   out_4209121349994159134[388] = 0;
   out_4209121349994159134[389] = 0;
   out_4209121349994159134[390] = 0;
   out_4209121349994159134[391] = 0;
   out_4209121349994159134[392] = 0;
   out_4209121349994159134[393] = 0;
   out_4209121349994159134[394] = 0;
   out_4209121349994159134[395] = 0;
   out_4209121349994159134[396] = 1;
   out_4209121349994159134[397] = 0;
   out_4209121349994159134[398] = 0;
   out_4209121349994159134[399] = 0;
   out_4209121349994159134[400] = 0;
   out_4209121349994159134[401] = 0;
   out_4209121349994159134[402] = 0;
   out_4209121349994159134[403] = 0;
   out_4209121349994159134[404] = 0;
   out_4209121349994159134[405] = 0;
   out_4209121349994159134[406] = 0;
   out_4209121349994159134[407] = 0;
   out_4209121349994159134[408] = 0;
   out_4209121349994159134[409] = 0;
   out_4209121349994159134[410] = 0;
   out_4209121349994159134[411] = 0;
   out_4209121349994159134[412] = 0;
   out_4209121349994159134[413] = 0;
   out_4209121349994159134[414] = 0;
   out_4209121349994159134[415] = 0;
   out_4209121349994159134[416] = 0;
   out_4209121349994159134[417] = 0;
   out_4209121349994159134[418] = 1;
   out_4209121349994159134[419] = 0;
   out_4209121349994159134[420] = 0;
   out_4209121349994159134[421] = 0;
   out_4209121349994159134[422] = 0;
   out_4209121349994159134[423] = 0;
   out_4209121349994159134[424] = 0;
   out_4209121349994159134[425] = 0;
   out_4209121349994159134[426] = 0;
   out_4209121349994159134[427] = 0;
   out_4209121349994159134[428] = 0;
   out_4209121349994159134[429] = 0;
   out_4209121349994159134[430] = 0;
   out_4209121349994159134[431] = 0;
   out_4209121349994159134[432] = 0;
   out_4209121349994159134[433] = 0;
   out_4209121349994159134[434] = 0;
   out_4209121349994159134[435] = 0;
   out_4209121349994159134[436] = 0;
   out_4209121349994159134[437] = 0;
   out_4209121349994159134[438] = 0;
   out_4209121349994159134[439] = 0;
   out_4209121349994159134[440] = 1;
}
void h_4(double *state, double *unused, double *out_127005917296737428) {
   out_127005917296737428[0] = state[10] + state[13];
   out_127005917296737428[1] = state[11] + state[14];
   out_127005917296737428[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1751574332541175876) {
   out_1751574332541175876[0] = 0;
   out_1751574332541175876[1] = 0;
   out_1751574332541175876[2] = 0;
   out_1751574332541175876[3] = 0;
   out_1751574332541175876[4] = 0;
   out_1751574332541175876[5] = 0;
   out_1751574332541175876[6] = 0;
   out_1751574332541175876[7] = 0;
   out_1751574332541175876[8] = 0;
   out_1751574332541175876[9] = 0;
   out_1751574332541175876[10] = 1;
   out_1751574332541175876[11] = 0;
   out_1751574332541175876[12] = 0;
   out_1751574332541175876[13] = 1;
   out_1751574332541175876[14] = 0;
   out_1751574332541175876[15] = 0;
   out_1751574332541175876[16] = 0;
   out_1751574332541175876[17] = 0;
   out_1751574332541175876[18] = 0;
   out_1751574332541175876[19] = 0;
   out_1751574332541175876[20] = 0;
   out_1751574332541175876[21] = 0;
   out_1751574332541175876[22] = 0;
   out_1751574332541175876[23] = 0;
   out_1751574332541175876[24] = 0;
   out_1751574332541175876[25] = 0;
   out_1751574332541175876[26] = 0;
   out_1751574332541175876[27] = 0;
   out_1751574332541175876[28] = 0;
   out_1751574332541175876[29] = 0;
   out_1751574332541175876[30] = 0;
   out_1751574332541175876[31] = 0;
   out_1751574332541175876[32] = 0;
   out_1751574332541175876[33] = 1;
   out_1751574332541175876[34] = 0;
   out_1751574332541175876[35] = 0;
   out_1751574332541175876[36] = 1;
   out_1751574332541175876[37] = 0;
   out_1751574332541175876[38] = 0;
   out_1751574332541175876[39] = 0;
   out_1751574332541175876[40] = 0;
   out_1751574332541175876[41] = 0;
   out_1751574332541175876[42] = 0;
   out_1751574332541175876[43] = 0;
   out_1751574332541175876[44] = 0;
   out_1751574332541175876[45] = 0;
   out_1751574332541175876[46] = 0;
   out_1751574332541175876[47] = 0;
   out_1751574332541175876[48] = 0;
   out_1751574332541175876[49] = 0;
   out_1751574332541175876[50] = 0;
   out_1751574332541175876[51] = 0;
   out_1751574332541175876[52] = 0;
   out_1751574332541175876[53] = 0;
   out_1751574332541175876[54] = 0;
   out_1751574332541175876[55] = 0;
   out_1751574332541175876[56] = 1;
   out_1751574332541175876[57] = 0;
   out_1751574332541175876[58] = 0;
   out_1751574332541175876[59] = 1;
   out_1751574332541175876[60] = 0;
   out_1751574332541175876[61] = 0;
   out_1751574332541175876[62] = 0;
   out_1751574332541175876[63] = 0;
   out_1751574332541175876[64] = 0;
   out_1751574332541175876[65] = 0;
}
void h_9(double *state, double *unused, double *out_295549267304732882) {
   out_295549267304732882[0] = state[10];
   out_295549267304732882[1] = state[11];
   out_295549267304732882[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5908742068895953359) {
   out_5908742068895953359[0] = 0;
   out_5908742068895953359[1] = 0;
   out_5908742068895953359[2] = 0;
   out_5908742068895953359[3] = 0;
   out_5908742068895953359[4] = 0;
   out_5908742068895953359[5] = 0;
   out_5908742068895953359[6] = 0;
   out_5908742068895953359[7] = 0;
   out_5908742068895953359[8] = 0;
   out_5908742068895953359[9] = 0;
   out_5908742068895953359[10] = 1;
   out_5908742068895953359[11] = 0;
   out_5908742068895953359[12] = 0;
   out_5908742068895953359[13] = 0;
   out_5908742068895953359[14] = 0;
   out_5908742068895953359[15] = 0;
   out_5908742068895953359[16] = 0;
   out_5908742068895953359[17] = 0;
   out_5908742068895953359[18] = 0;
   out_5908742068895953359[19] = 0;
   out_5908742068895953359[20] = 0;
   out_5908742068895953359[21] = 0;
   out_5908742068895953359[22] = 0;
   out_5908742068895953359[23] = 0;
   out_5908742068895953359[24] = 0;
   out_5908742068895953359[25] = 0;
   out_5908742068895953359[26] = 0;
   out_5908742068895953359[27] = 0;
   out_5908742068895953359[28] = 0;
   out_5908742068895953359[29] = 0;
   out_5908742068895953359[30] = 0;
   out_5908742068895953359[31] = 0;
   out_5908742068895953359[32] = 0;
   out_5908742068895953359[33] = 1;
   out_5908742068895953359[34] = 0;
   out_5908742068895953359[35] = 0;
   out_5908742068895953359[36] = 0;
   out_5908742068895953359[37] = 0;
   out_5908742068895953359[38] = 0;
   out_5908742068895953359[39] = 0;
   out_5908742068895953359[40] = 0;
   out_5908742068895953359[41] = 0;
   out_5908742068895953359[42] = 0;
   out_5908742068895953359[43] = 0;
   out_5908742068895953359[44] = 0;
   out_5908742068895953359[45] = 0;
   out_5908742068895953359[46] = 0;
   out_5908742068895953359[47] = 0;
   out_5908742068895953359[48] = 0;
   out_5908742068895953359[49] = 0;
   out_5908742068895953359[50] = 0;
   out_5908742068895953359[51] = 0;
   out_5908742068895953359[52] = 0;
   out_5908742068895953359[53] = 0;
   out_5908742068895953359[54] = 0;
   out_5908742068895953359[55] = 0;
   out_5908742068895953359[56] = 1;
   out_5908742068895953359[57] = 0;
   out_5908742068895953359[58] = 0;
   out_5908742068895953359[59] = 0;
   out_5908742068895953359[60] = 0;
   out_5908742068895953359[61] = 0;
   out_5908742068895953359[62] = 0;
   out_5908742068895953359[63] = 0;
   out_5908742068895953359[64] = 0;
   out_5908742068895953359[65] = 0;
}
void h_10(double *state, double *unused, double *out_8994351018960577770) {
   out_8994351018960577770[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8994351018960577770[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8994351018960577770[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_881387217823812750) {
   out_881387217823812750[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_881387217823812750[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_881387217823812750[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_881387217823812750[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_881387217823812750[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_881387217823812750[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_881387217823812750[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_881387217823812750[7] = 0;
   out_881387217823812750[8] = 0;
   out_881387217823812750[9] = 0;
   out_881387217823812750[10] = 0;
   out_881387217823812750[11] = 0;
   out_881387217823812750[12] = 0;
   out_881387217823812750[13] = 0;
   out_881387217823812750[14] = 0;
   out_881387217823812750[15] = 0;
   out_881387217823812750[16] = 1;
   out_881387217823812750[17] = 0;
   out_881387217823812750[18] = 0;
   out_881387217823812750[19] = 1;
   out_881387217823812750[20] = 0;
   out_881387217823812750[21] = 0;
   out_881387217823812750[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_881387217823812750[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_881387217823812750[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_881387217823812750[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_881387217823812750[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_881387217823812750[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_881387217823812750[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_881387217823812750[29] = 0;
   out_881387217823812750[30] = 0;
   out_881387217823812750[31] = 0;
   out_881387217823812750[32] = 0;
   out_881387217823812750[33] = 0;
   out_881387217823812750[34] = 0;
   out_881387217823812750[35] = 0;
   out_881387217823812750[36] = 0;
   out_881387217823812750[37] = 0;
   out_881387217823812750[38] = 0;
   out_881387217823812750[39] = 1;
   out_881387217823812750[40] = 0;
   out_881387217823812750[41] = 0;
   out_881387217823812750[42] = 1;
   out_881387217823812750[43] = 0;
   out_881387217823812750[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_881387217823812750[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_881387217823812750[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_881387217823812750[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_881387217823812750[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_881387217823812750[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_881387217823812750[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_881387217823812750[51] = 0;
   out_881387217823812750[52] = 0;
   out_881387217823812750[53] = 0;
   out_881387217823812750[54] = 0;
   out_881387217823812750[55] = 0;
   out_881387217823812750[56] = 0;
   out_881387217823812750[57] = 0;
   out_881387217823812750[58] = 0;
   out_881387217823812750[59] = 0;
   out_881387217823812750[60] = 0;
   out_881387217823812750[61] = 0;
   out_881387217823812750[62] = 1;
   out_881387217823812750[63] = 0;
   out_881387217823812750[64] = 0;
   out_881387217823812750[65] = 1;
}
void h_12(double *state, double *unused, double *out_8105328428021366339) {
   out_8105328428021366339[0] = state[0];
   out_8105328428021366339[1] = state[1];
   out_8105328428021366339[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1130475307493582209) {
   out_1130475307493582209[0] = 1;
   out_1130475307493582209[1] = 0;
   out_1130475307493582209[2] = 0;
   out_1130475307493582209[3] = 0;
   out_1130475307493582209[4] = 0;
   out_1130475307493582209[5] = 0;
   out_1130475307493582209[6] = 0;
   out_1130475307493582209[7] = 0;
   out_1130475307493582209[8] = 0;
   out_1130475307493582209[9] = 0;
   out_1130475307493582209[10] = 0;
   out_1130475307493582209[11] = 0;
   out_1130475307493582209[12] = 0;
   out_1130475307493582209[13] = 0;
   out_1130475307493582209[14] = 0;
   out_1130475307493582209[15] = 0;
   out_1130475307493582209[16] = 0;
   out_1130475307493582209[17] = 0;
   out_1130475307493582209[18] = 0;
   out_1130475307493582209[19] = 0;
   out_1130475307493582209[20] = 0;
   out_1130475307493582209[21] = 0;
   out_1130475307493582209[22] = 0;
   out_1130475307493582209[23] = 1;
   out_1130475307493582209[24] = 0;
   out_1130475307493582209[25] = 0;
   out_1130475307493582209[26] = 0;
   out_1130475307493582209[27] = 0;
   out_1130475307493582209[28] = 0;
   out_1130475307493582209[29] = 0;
   out_1130475307493582209[30] = 0;
   out_1130475307493582209[31] = 0;
   out_1130475307493582209[32] = 0;
   out_1130475307493582209[33] = 0;
   out_1130475307493582209[34] = 0;
   out_1130475307493582209[35] = 0;
   out_1130475307493582209[36] = 0;
   out_1130475307493582209[37] = 0;
   out_1130475307493582209[38] = 0;
   out_1130475307493582209[39] = 0;
   out_1130475307493582209[40] = 0;
   out_1130475307493582209[41] = 0;
   out_1130475307493582209[42] = 0;
   out_1130475307493582209[43] = 0;
   out_1130475307493582209[44] = 0;
   out_1130475307493582209[45] = 0;
   out_1130475307493582209[46] = 1;
   out_1130475307493582209[47] = 0;
   out_1130475307493582209[48] = 0;
   out_1130475307493582209[49] = 0;
   out_1130475307493582209[50] = 0;
   out_1130475307493582209[51] = 0;
   out_1130475307493582209[52] = 0;
   out_1130475307493582209[53] = 0;
   out_1130475307493582209[54] = 0;
   out_1130475307493582209[55] = 0;
   out_1130475307493582209[56] = 0;
   out_1130475307493582209[57] = 0;
   out_1130475307493582209[58] = 0;
   out_1130475307493582209[59] = 0;
   out_1130475307493582209[60] = 0;
   out_1130475307493582209[61] = 0;
   out_1130475307493582209[62] = 0;
   out_1130475307493582209[63] = 0;
   out_1130475307493582209[64] = 0;
   out_1130475307493582209[65] = 0;
}
void h_31(double *state, double *unused, double *out_5160887999776252386) {
   out_5160887999776252386[0] = state[7];
   out_5160887999776252386[1] = state[8];
   out_5160887999776252386[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1615087724831431500) {
   out_1615087724831431500[0] = 0;
   out_1615087724831431500[1] = 0;
   out_1615087724831431500[2] = 0;
   out_1615087724831431500[3] = 0;
   out_1615087724831431500[4] = 0;
   out_1615087724831431500[5] = 0;
   out_1615087724831431500[6] = 0;
   out_1615087724831431500[7] = 1;
   out_1615087724831431500[8] = 0;
   out_1615087724831431500[9] = 0;
   out_1615087724831431500[10] = 0;
   out_1615087724831431500[11] = 0;
   out_1615087724831431500[12] = 0;
   out_1615087724831431500[13] = 0;
   out_1615087724831431500[14] = 0;
   out_1615087724831431500[15] = 0;
   out_1615087724831431500[16] = 0;
   out_1615087724831431500[17] = 0;
   out_1615087724831431500[18] = 0;
   out_1615087724831431500[19] = 0;
   out_1615087724831431500[20] = 0;
   out_1615087724831431500[21] = 0;
   out_1615087724831431500[22] = 0;
   out_1615087724831431500[23] = 0;
   out_1615087724831431500[24] = 0;
   out_1615087724831431500[25] = 0;
   out_1615087724831431500[26] = 0;
   out_1615087724831431500[27] = 0;
   out_1615087724831431500[28] = 0;
   out_1615087724831431500[29] = 0;
   out_1615087724831431500[30] = 1;
   out_1615087724831431500[31] = 0;
   out_1615087724831431500[32] = 0;
   out_1615087724831431500[33] = 0;
   out_1615087724831431500[34] = 0;
   out_1615087724831431500[35] = 0;
   out_1615087724831431500[36] = 0;
   out_1615087724831431500[37] = 0;
   out_1615087724831431500[38] = 0;
   out_1615087724831431500[39] = 0;
   out_1615087724831431500[40] = 0;
   out_1615087724831431500[41] = 0;
   out_1615087724831431500[42] = 0;
   out_1615087724831431500[43] = 0;
   out_1615087724831431500[44] = 0;
   out_1615087724831431500[45] = 0;
   out_1615087724831431500[46] = 0;
   out_1615087724831431500[47] = 0;
   out_1615087724831431500[48] = 0;
   out_1615087724831431500[49] = 0;
   out_1615087724831431500[50] = 0;
   out_1615087724831431500[51] = 0;
   out_1615087724831431500[52] = 0;
   out_1615087724831431500[53] = 1;
   out_1615087724831431500[54] = 0;
   out_1615087724831431500[55] = 0;
   out_1615087724831431500[56] = 0;
   out_1615087724831431500[57] = 0;
   out_1615087724831431500[58] = 0;
   out_1615087724831431500[59] = 0;
   out_1615087724831431500[60] = 0;
   out_1615087724831431500[61] = 0;
   out_1615087724831431500[62] = 0;
   out_1615087724831431500[63] = 0;
   out_1615087724831431500[64] = 0;
   out_1615087724831431500[65] = 0;
}
void h_32(double *state, double *unused, double *out_4726594278692124627) {
   out_4726594278692124627[0] = state[3];
   out_4726594278692124627[1] = state[4];
   out_4726594278692124627[2] = state[5];
   out_4726594278692124627[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1746252509772171969) {
   out_1746252509772171969[0] = 0;
   out_1746252509772171969[1] = 0;
   out_1746252509772171969[2] = 0;
   out_1746252509772171969[3] = 1;
   out_1746252509772171969[4] = 0;
   out_1746252509772171969[5] = 0;
   out_1746252509772171969[6] = 0;
   out_1746252509772171969[7] = 0;
   out_1746252509772171969[8] = 0;
   out_1746252509772171969[9] = 0;
   out_1746252509772171969[10] = 0;
   out_1746252509772171969[11] = 0;
   out_1746252509772171969[12] = 0;
   out_1746252509772171969[13] = 0;
   out_1746252509772171969[14] = 0;
   out_1746252509772171969[15] = 0;
   out_1746252509772171969[16] = 0;
   out_1746252509772171969[17] = 0;
   out_1746252509772171969[18] = 0;
   out_1746252509772171969[19] = 0;
   out_1746252509772171969[20] = 0;
   out_1746252509772171969[21] = 0;
   out_1746252509772171969[22] = 0;
   out_1746252509772171969[23] = 0;
   out_1746252509772171969[24] = 0;
   out_1746252509772171969[25] = 0;
   out_1746252509772171969[26] = 1;
   out_1746252509772171969[27] = 0;
   out_1746252509772171969[28] = 0;
   out_1746252509772171969[29] = 0;
   out_1746252509772171969[30] = 0;
   out_1746252509772171969[31] = 0;
   out_1746252509772171969[32] = 0;
   out_1746252509772171969[33] = 0;
   out_1746252509772171969[34] = 0;
   out_1746252509772171969[35] = 0;
   out_1746252509772171969[36] = 0;
   out_1746252509772171969[37] = 0;
   out_1746252509772171969[38] = 0;
   out_1746252509772171969[39] = 0;
   out_1746252509772171969[40] = 0;
   out_1746252509772171969[41] = 0;
   out_1746252509772171969[42] = 0;
   out_1746252509772171969[43] = 0;
   out_1746252509772171969[44] = 0;
   out_1746252509772171969[45] = 0;
   out_1746252509772171969[46] = 0;
   out_1746252509772171969[47] = 0;
   out_1746252509772171969[48] = 0;
   out_1746252509772171969[49] = 1;
   out_1746252509772171969[50] = 0;
   out_1746252509772171969[51] = 0;
   out_1746252509772171969[52] = 0;
   out_1746252509772171969[53] = 0;
   out_1746252509772171969[54] = 0;
   out_1746252509772171969[55] = 0;
   out_1746252509772171969[56] = 0;
   out_1746252509772171969[57] = 0;
   out_1746252509772171969[58] = 0;
   out_1746252509772171969[59] = 0;
   out_1746252509772171969[60] = 0;
   out_1746252509772171969[61] = 0;
   out_1746252509772171969[62] = 0;
   out_1746252509772171969[63] = 0;
   out_1746252509772171969[64] = 0;
   out_1746252509772171969[65] = 0;
   out_1746252509772171969[66] = 0;
   out_1746252509772171969[67] = 0;
   out_1746252509772171969[68] = 0;
   out_1746252509772171969[69] = 0;
   out_1746252509772171969[70] = 0;
   out_1746252509772171969[71] = 0;
   out_1746252509772171969[72] = 1;
   out_1746252509772171969[73] = 0;
   out_1746252509772171969[74] = 0;
   out_1746252509772171969[75] = 0;
   out_1746252509772171969[76] = 0;
   out_1746252509772171969[77] = 0;
   out_1746252509772171969[78] = 0;
   out_1746252509772171969[79] = 0;
   out_1746252509772171969[80] = 0;
   out_1746252509772171969[81] = 0;
   out_1746252509772171969[82] = 0;
   out_1746252509772171969[83] = 0;
   out_1746252509772171969[84] = 0;
   out_1746252509772171969[85] = 0;
   out_1746252509772171969[86] = 0;
   out_1746252509772171969[87] = 0;
}
void h_13(double *state, double *unused, double *out_1833653487685933304) {
   out_1833653487685933304[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1833653487685933304[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1833653487685933304[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5941475568526639255) {
   out_5941475568526639255[0] = 0;
   out_5941475568526639255[1] = 0;
   out_5941475568526639255[2] = 0;
   out_5941475568526639255[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5941475568526639255[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5941475568526639255[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5941475568526639255[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5941475568526639255[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5941475568526639255[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5941475568526639255[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5941475568526639255[10] = 0;
   out_5941475568526639255[11] = 0;
   out_5941475568526639255[12] = 0;
   out_5941475568526639255[13] = 0;
   out_5941475568526639255[14] = 0;
   out_5941475568526639255[15] = 0;
   out_5941475568526639255[16] = 0;
   out_5941475568526639255[17] = 0;
   out_5941475568526639255[18] = 0;
   out_5941475568526639255[19] = 0;
   out_5941475568526639255[20] = 0;
   out_5941475568526639255[21] = 0;
   out_5941475568526639255[22] = 0;
   out_5941475568526639255[23] = 0;
   out_5941475568526639255[24] = 0;
   out_5941475568526639255[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5941475568526639255[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5941475568526639255[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5941475568526639255[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5941475568526639255[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5941475568526639255[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5941475568526639255[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5941475568526639255[32] = 0;
   out_5941475568526639255[33] = 0;
   out_5941475568526639255[34] = 0;
   out_5941475568526639255[35] = 0;
   out_5941475568526639255[36] = 0;
   out_5941475568526639255[37] = 0;
   out_5941475568526639255[38] = 0;
   out_5941475568526639255[39] = 0;
   out_5941475568526639255[40] = 0;
   out_5941475568526639255[41] = 0;
   out_5941475568526639255[42] = 0;
   out_5941475568526639255[43] = 0;
   out_5941475568526639255[44] = 0;
   out_5941475568526639255[45] = 0;
   out_5941475568526639255[46] = 0;
   out_5941475568526639255[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5941475568526639255[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5941475568526639255[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5941475568526639255[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5941475568526639255[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5941475568526639255[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5941475568526639255[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5941475568526639255[54] = 0;
   out_5941475568526639255[55] = 0;
   out_5941475568526639255[56] = 0;
   out_5941475568526639255[57] = 0;
   out_5941475568526639255[58] = 0;
   out_5941475568526639255[59] = 0;
   out_5941475568526639255[60] = 0;
   out_5941475568526639255[61] = 0;
   out_5941475568526639255[62] = 0;
   out_5941475568526639255[63] = 0;
   out_5941475568526639255[64] = 0;
   out_5941475568526639255[65] = 0;
}
void h_14(double *state, double *unused, double *out_295549267304732882) {
   out_295549267304732882[0] = state[10];
   out_295549267304732882[1] = state[11];
   out_295549267304732882[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5908742068895953359) {
   out_5908742068895953359[0] = 0;
   out_5908742068895953359[1] = 0;
   out_5908742068895953359[2] = 0;
   out_5908742068895953359[3] = 0;
   out_5908742068895953359[4] = 0;
   out_5908742068895953359[5] = 0;
   out_5908742068895953359[6] = 0;
   out_5908742068895953359[7] = 0;
   out_5908742068895953359[8] = 0;
   out_5908742068895953359[9] = 0;
   out_5908742068895953359[10] = 1;
   out_5908742068895953359[11] = 0;
   out_5908742068895953359[12] = 0;
   out_5908742068895953359[13] = 0;
   out_5908742068895953359[14] = 0;
   out_5908742068895953359[15] = 0;
   out_5908742068895953359[16] = 0;
   out_5908742068895953359[17] = 0;
   out_5908742068895953359[18] = 0;
   out_5908742068895953359[19] = 0;
   out_5908742068895953359[20] = 0;
   out_5908742068895953359[21] = 0;
   out_5908742068895953359[22] = 0;
   out_5908742068895953359[23] = 0;
   out_5908742068895953359[24] = 0;
   out_5908742068895953359[25] = 0;
   out_5908742068895953359[26] = 0;
   out_5908742068895953359[27] = 0;
   out_5908742068895953359[28] = 0;
   out_5908742068895953359[29] = 0;
   out_5908742068895953359[30] = 0;
   out_5908742068895953359[31] = 0;
   out_5908742068895953359[32] = 0;
   out_5908742068895953359[33] = 1;
   out_5908742068895953359[34] = 0;
   out_5908742068895953359[35] = 0;
   out_5908742068895953359[36] = 0;
   out_5908742068895953359[37] = 0;
   out_5908742068895953359[38] = 0;
   out_5908742068895953359[39] = 0;
   out_5908742068895953359[40] = 0;
   out_5908742068895953359[41] = 0;
   out_5908742068895953359[42] = 0;
   out_5908742068895953359[43] = 0;
   out_5908742068895953359[44] = 0;
   out_5908742068895953359[45] = 0;
   out_5908742068895953359[46] = 0;
   out_5908742068895953359[47] = 0;
   out_5908742068895953359[48] = 0;
   out_5908742068895953359[49] = 0;
   out_5908742068895953359[50] = 0;
   out_5908742068895953359[51] = 0;
   out_5908742068895953359[52] = 0;
   out_5908742068895953359[53] = 0;
   out_5908742068895953359[54] = 0;
   out_5908742068895953359[55] = 0;
   out_5908742068895953359[56] = 1;
   out_5908742068895953359[57] = 0;
   out_5908742068895953359[58] = 0;
   out_5908742068895953359[59] = 0;
   out_5908742068895953359[60] = 0;
   out_5908742068895953359[61] = 0;
   out_5908742068895953359[62] = 0;
   out_5908742068895953359[63] = 0;
   out_5908742068895953359[64] = 0;
   out_5908742068895953359[65] = 0;
}
void h_33(double *state, double *unused, double *out_7478846720422514676) {
   out_7478846720422514676[0] = state[16];
   out_7478846720422514676[1] = state[17];
   out_7478846720422514676[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4765644729470289104) {
   out_4765644729470289104[0] = 0;
   out_4765644729470289104[1] = 0;
   out_4765644729470289104[2] = 0;
   out_4765644729470289104[3] = 0;
   out_4765644729470289104[4] = 0;
   out_4765644729470289104[5] = 0;
   out_4765644729470289104[6] = 0;
   out_4765644729470289104[7] = 0;
   out_4765644729470289104[8] = 0;
   out_4765644729470289104[9] = 0;
   out_4765644729470289104[10] = 0;
   out_4765644729470289104[11] = 0;
   out_4765644729470289104[12] = 0;
   out_4765644729470289104[13] = 0;
   out_4765644729470289104[14] = 0;
   out_4765644729470289104[15] = 0;
   out_4765644729470289104[16] = 1;
   out_4765644729470289104[17] = 0;
   out_4765644729470289104[18] = 0;
   out_4765644729470289104[19] = 0;
   out_4765644729470289104[20] = 0;
   out_4765644729470289104[21] = 0;
   out_4765644729470289104[22] = 0;
   out_4765644729470289104[23] = 0;
   out_4765644729470289104[24] = 0;
   out_4765644729470289104[25] = 0;
   out_4765644729470289104[26] = 0;
   out_4765644729470289104[27] = 0;
   out_4765644729470289104[28] = 0;
   out_4765644729470289104[29] = 0;
   out_4765644729470289104[30] = 0;
   out_4765644729470289104[31] = 0;
   out_4765644729470289104[32] = 0;
   out_4765644729470289104[33] = 0;
   out_4765644729470289104[34] = 0;
   out_4765644729470289104[35] = 0;
   out_4765644729470289104[36] = 0;
   out_4765644729470289104[37] = 0;
   out_4765644729470289104[38] = 0;
   out_4765644729470289104[39] = 1;
   out_4765644729470289104[40] = 0;
   out_4765644729470289104[41] = 0;
   out_4765644729470289104[42] = 0;
   out_4765644729470289104[43] = 0;
   out_4765644729470289104[44] = 0;
   out_4765644729470289104[45] = 0;
   out_4765644729470289104[46] = 0;
   out_4765644729470289104[47] = 0;
   out_4765644729470289104[48] = 0;
   out_4765644729470289104[49] = 0;
   out_4765644729470289104[50] = 0;
   out_4765644729470289104[51] = 0;
   out_4765644729470289104[52] = 0;
   out_4765644729470289104[53] = 0;
   out_4765644729470289104[54] = 0;
   out_4765644729470289104[55] = 0;
   out_4765644729470289104[56] = 0;
   out_4765644729470289104[57] = 0;
   out_4765644729470289104[58] = 0;
   out_4765644729470289104[59] = 0;
   out_4765644729470289104[60] = 0;
   out_4765644729470289104[61] = 0;
   out_4765644729470289104[62] = 1;
   out_4765644729470289104[63] = 0;
   out_4765644729470289104[64] = 0;
   out_4765644729470289104[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1526956633722536676) {
  H(in_vec, out_1526956633722536676);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3230416160365452320) {
  err_fun(nom_x, delta_x, out_3230416160365452320);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3644280506359970566) {
  inv_err_fun(nom_x, true_x, out_3644280506359970566);
}
void live_H_mod_fun(double *state, double *out_5597765590530589087) {
  H_mod_fun(state, out_5597765590530589087);
}
void live_f_fun(double *state, double dt, double *out_1109019082588435211) {
  f_fun(state,  dt, out_1109019082588435211);
}
void live_F_fun(double *state, double dt, double *out_4209121349994159134) {
  F_fun(state,  dt, out_4209121349994159134);
}
void live_h_4(double *state, double *unused, double *out_127005917296737428) {
  h_4(state, unused, out_127005917296737428);
}
void live_H_4(double *state, double *unused, double *out_1751574332541175876) {
  H_4(state, unused, out_1751574332541175876);
}
void live_h_9(double *state, double *unused, double *out_295549267304732882) {
  h_9(state, unused, out_295549267304732882);
}
void live_H_9(double *state, double *unused, double *out_5908742068895953359) {
  H_9(state, unused, out_5908742068895953359);
}
void live_h_10(double *state, double *unused, double *out_8994351018960577770) {
  h_10(state, unused, out_8994351018960577770);
}
void live_H_10(double *state, double *unused, double *out_881387217823812750) {
  H_10(state, unused, out_881387217823812750);
}
void live_h_12(double *state, double *unused, double *out_8105328428021366339) {
  h_12(state, unused, out_8105328428021366339);
}
void live_H_12(double *state, double *unused, double *out_1130475307493582209) {
  H_12(state, unused, out_1130475307493582209);
}
void live_h_31(double *state, double *unused, double *out_5160887999776252386) {
  h_31(state, unused, out_5160887999776252386);
}
void live_H_31(double *state, double *unused, double *out_1615087724831431500) {
  H_31(state, unused, out_1615087724831431500);
}
void live_h_32(double *state, double *unused, double *out_4726594278692124627) {
  h_32(state, unused, out_4726594278692124627);
}
void live_H_32(double *state, double *unused, double *out_1746252509772171969) {
  H_32(state, unused, out_1746252509772171969);
}
void live_h_13(double *state, double *unused, double *out_1833653487685933304) {
  h_13(state, unused, out_1833653487685933304);
}
void live_H_13(double *state, double *unused, double *out_5941475568526639255) {
  H_13(state, unused, out_5941475568526639255);
}
void live_h_14(double *state, double *unused, double *out_295549267304732882) {
  h_14(state, unused, out_295549267304732882);
}
void live_H_14(double *state, double *unused, double *out_5908742068895953359) {
  H_14(state, unused, out_5908742068895953359);
}
void live_h_33(double *state, double *unused, double *out_7478846720422514676) {
  h_33(state, unused, out_7478846720422514676);
}
void live_H_33(double *state, double *unused, double *out_4765644729470289104) {
  H_33(state, unused, out_4765644729470289104);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
